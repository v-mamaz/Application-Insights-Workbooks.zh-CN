{
    "version": "Notebook/1.0",
    "items": [
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">ÈÄâÊã© Log Analytics Â∑•‰ΩúÂå∫ </span> <br> <span style=\"font-size:12px;\"><a href=\"#\">Â¶Ç‰ΩïÈÖçÁΩÆÂ§á‰ªΩÊä•Ë°®ÁöÑ‰øùÁÆ°Â∫ìËØäÊñ≠ËÆæÁΩÆ </a> </span> </div> <div style=\"text-align:right;float:right\"><span style=\"font-size:12px;\"><a href=\"#\">Power BI Êä•Ë°®ÂèëÁîü‰∫Ü‰ªÄ‰πàÔºü</a> </span> </div>"
            },
            "name": "text - 14"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "value::all"
                ],
                "parameters": [
                    {
                        "id": "6c14aa18-29d3-4b94-81a9-4499c98aa9bb",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscriptions",
                        "type": 6,
                        "description": "Âú®ÂÖ∂‰∏≠ÂàõÂª∫‰∫Ü LA Â∑•‰ΩúÂå∫ÁöÑËÆ¢ÈòÖ",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "includeAll": false
                        },
                        "timeContext": {
                            "durationMs": 604800000
                        }
                    },
                    {
                        "id": "f430b9f7-0bcb-49de-ad5d-67547345d26e",
                        "version": "KqlParameterItem/1.0",
                        "name": "Workspaces",
                        "type": 5,
                        "description": "Âú® Azure Â§á‰ªΩËØäÊñ≠ËÆæÁΩÆ‰∏≠ÈÖçÁΩÆÁöÑ LA Â∑•‰ΩúÂå∫",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
                        "crossComponentResources": [
                            "{Subscriptions}"
                        ],
                        "value": [],
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                    }
                ],
                "style": "above",
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 1"
        },
        {
            "type": 1,
            "content": {
                "json": "________________"
            },
            "name": "text - 12"
        },
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">Êä•Ë°®Á≠õÈÄâÂô® </span></div> <div style=\"text-align:right;float:right\"><span style=\"font-size:12px;\"><a href=\"#\">Â¶Ç‰Ωï‰ΩøÁî®Â§á‰ªΩÊä•Ë°®Ôºü</a></span></div>"
            },
            "name": "text - 15"
        },
        {
            "type": 1,
            "content": {
                "json": "<p> üí° <span style=\"font-size:12px; font-style:italic\"> Á≠õÈÄâÂô®Âú®ÊØè‰∏™È°µÈù¢‰ªéÂ∑¶ÂêëÂè≥„ÄÅ‰ªé‰∏äÂêë‰∏ãÂ∫îÁî®„ÄÇ</span> </p>"
            },
            "name": "text - 16"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "parameters": [
                    {
                        "id": "8c4ae44c-fa9a-4498-aedc-736a56e64b43",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "value": {
                            "durationMs": 604800000
                        },
                        "typeSettings": {
                            "selectableValues": [
                                {
                                    "durationMs": 3600000
                                },
                                {
                                    "durationMs": 14400000
                                },
                                {
                                    "durationMs": 43200000
                                },
                                {
                                    "durationMs": 86400000
                                },
                                {
                                    "durationMs": 172800000
                                },
                                {
                                    "durationMs": 259200000
                                },
                                {
                                    "durationMs": 604800000
                                },
                                {
                                    "durationMs": 1209600000
                                },
                                {
                                    "durationMs": 2419200000
                                },
                                {
                                    "durationMs": 2592000000
                                },
                                {
                                    "durationMs": 5184000000
                                },
                                {
                                    "durationMs": 7776000000
                                }
                            ],
                            "allowCustom": true
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "4756b65c-80b2-4477-9bec-626cc713dfd7",
                        "version": "KqlParameterItem/1.0",
                        "name": "BMSTypeWithBackupItemType",
                        "label": "Backup Item Type",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemUnderAzureDiagnostics = ( ) \r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend  BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\") \r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemUnderResourceSpecific = ( ) \r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n};\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct BackupManagementType, BackupItemType\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType) \r\n| distinct BMSTypeWithBackupItemType",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*",
                            "showDefault": false
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "2a83acc5-2123-476f-8a4c-da2fddf231a1",
                        "version": "KqlParameterItem/1.0",
                        "name": "Location",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| distinct ResourceId, AzureDataCenter, VaultName\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| distinct ResourceId, AzureDataCenter, VaultName;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| project BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), ResourceId\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct AzureDataCenter};\r\nLatestBackupItemTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "fefd31fa-2774-43ca-8cc3-44d477c969f0",
                        "version": "KqlParameterItem/1.0",
                        "name": "Vault",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId, AzureDataCenter, VaultName\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId, AzureDataCenter, VaultName;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| project BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), ResourceId\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct VaultName};\r\nLatestBackupItemTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "c30c520c-9918-4f20-889b-664fd955b5c5",
                        "version": "KqlParameterItem/1.0",
                        "name": "HiddenParameter",
                        "type": 1,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"null\"}",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "isHiddenWhenLocked": true,
                        "queryType": 8
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 7"
        },
        {
            "type": 1,
            "content": {
                "json": "‚ìò <span style=\"font-size:12px;font-style:italic\"> ÊâÄÊúâÊó•ÊúüÊó∂Èó¥ÈÉΩÂ§Ñ‰∫éÈó®Êà∑Êó∂Âå∫‰∏≠„ÄÇÊä•Ë°®‰∏≠‰∏çÊòæÁ§∫ÂΩìÂâçÊú™Êª°‰∏ÄÂ§©ÁöÑÊï∞ÊçÆ„ÄÇ</span></div>"
            },
            "name": "text - 18"
        },
        {
            "type": 1,
            "content": {
                "json": "___________"
            },
            "name": "text - 13"
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "nav",
                "links": [
                    {
                        "cellValue": "",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Summary",
                        "subTarget": "{BackupManagementType}",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Summary",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Protected Instances",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Protected Instances",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "parameters - 1",
                        "linkTarget": "step",
                        "linkLabel": "Storage",
                        "style": "primary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Storage",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "parameters - 1",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Job Distribution",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Job Distribution",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Job Details",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Job Details",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alert Distribution",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Alert Distribution",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alert Details",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Alert Details",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    }
                ]
            },
            "customWidth": "100",
            "name": "links - 8"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| summarize count(BackupItemUniqueId) by BackupItemProtectionState};\r\nLatestBackupItemDimensionTable",
                "size": 4,
                "exportFieldName": "BackupItemProtectionState",
                "exportParameterName": "BackupItemProtectionState",
                "exportDefaultValue": "*",
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "tiles",
                "tileSettings": {
                    "titleContent": {
                        "columnMatch": "BackupItemProtectionState",
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "subtitleContent": {
                        "columnMatch": "SubTitle",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "leftContent": {
                        "columnMatch": "count_BackupItemUniqueId",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                        }
                    },
                    "showBorder": true
                }
            },
            "showPin": true,
            "name": "query - 10"
        },
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:center\"><span style=\"font-size:14px;font-weight:600;\">ÊåâÁ≠ñÁï•ÊòæÁ§∫ÁöÑ BackupItem ÂíåÂ≠òÂÇ® *</span> </div>"
            },
            "name": "text - 19"
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "nav",
                "links": [
                    {
                        "cellValue": "{\"01) Policy\":\"Name of the backup policy\", \"02) Vault\":\"Vault associated with the given policy\", \"03) Front End Storage (MB)\":\"Total source size of all items being backed up according to the given policy\", \"04) Cloud Storage (MB)\":\"Total backend storage consumed by all items being backed up according to the given policy\", \"05) #BackupItems\":\"Number of items being backed up according to the given policy \" }",
                        "linkTarget": "CellDetails",
                        "linkLabel": "‚ìò",
                        "style": "link"
                    },
                    {
                        "linkTarget": "parameter",
                        "linkLabel": "‚Üª",
                        "style": "link"
                    }
                ]
            },
            "customWidth": "0",
            "name": "links - 18",
            "styleSettings": {
                "showBorder": true
            }
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "parameters": [
                    {
                        "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
                        "version": "KqlParameterItem/1.0",
                        "name": "PolicyName",
                        "label": "Search Policy Name",
                        "type": 1,
                        "value": "",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "5dc2a074-b510-44f2-9530-cfcbd159b59c",
                        "version": "KqlParameterItem/1.0",
                        "name": "BillingMetricSortBy",
                        "label": "Sort By:",
                        "type": 2,
                        "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                        },
                        "jsonData": "[{ \"value\": \"count_BackupItemUniqueId\", \"label\": \"# BackupItems\" },\r\n{ \"value\": \"sum_BackupItemFrontEndSize\", \"label\": \"Front End Storage (MB)\" }, \r\n{ \"value\": \"sum_StorageConsumedInMBs\", \"label\": \"Cloud Storage (MB)\", \"selected\": \"true\" }]",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "df3cc03c-53f7-4523-a29b-e50bf1b6d922",
                        "version": "KqlParameterItem/1.0",
                        "name": "BillingMetricOrder",
                        "label": "Order:",
                        "type": 2,
                        "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                        },
                        "jsonData": "[\r\n    { \"value\":\"Ascending\", \"selected\":true},\r\n    { \"value\":\"Descending\"}\r\n]",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "value": "Descending"
                    },
                    {
                        "id": "90478836-8cb6-4235-98a0-7724ac01d29a",
                        "version": "KqlParameterItem/1.0",
                        "name": "StorageMetricPageNumber",
                        "label": "Page:",
                        "type": 2,
                        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType, BackupItemProtectionState, PolicyName\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderAzureDiagnostics = ()\r\n{\r\n let PolicyTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Policy\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), PolicyName = columnifexists(\"PolicyName_s\", \"\"), ResourceId, TimeGenerated\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderResourceSpecific = ()\r\n{\r\n let PolicyTable = AddonAzureBackupPolicy \r\n| where OperationName == \"Policy\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueId, PolicyName, ResourceId, TimeGenerated\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated, ResourceId),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState, ResourceId};\r\nlet BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics | project  ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  project ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), BackupItemUniqueId, BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), \r\n    PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), TimeGenerated, ResourceId\r\n    | extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid) | project-away PolicyUniqueIdGuid, PolicyUniqueIdStr \r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderAzureDiagnostics ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderAzureDiagnostics | project BackupItemFrontEndSize = todouble(columnifexists(\"BackupItemFrontEndSize_s\", \"\")), BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet BackupItemAssociationAndStorageConsumptionUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific | project ProtectedContainerName, ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific |  project ProtectedContainerUniqueId, BackupItemUniqueId, BackupManagementServerUniqueId, PolicyUniqueId, TimeGenerated, ResourceId\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderResourceSpecific ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderResourceSpecific | project BackupItemFrontEndSize, BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestBackupItemAssociationAndStorageConsumptionTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= rightouter\r\n(CombinedTable | union isfuzzy = true  \r\n(BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics()\r\n),\r\n(BackupItemAssociationAndStorageConsumptionUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemProtectionState, PolicyName, ResourceId\r\n};\r\nLatestBackupItemAssociationAndStorageConsumptionTable\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| where PolicyName contains (@\"{PolicyName}\") or '*' in (@\"{PolicyName}\")\r\n| extend PolicyLink = strcat(ResourceId, \"/backupPolicies/\", PolicyName)\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMBs), count(BackupItemUniqueId) by PolicyName, ResourceId, PolicyLink \r\n| extend TempColumn = column_ifexists(tostring('{BillingMetricSortBy}'), \"sum_StorageConsumedInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{BillingMetricOrder}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| distinct page_num",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": "1",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "70",
            "name": "parameters - 7",
            "styleSettings": {
                "margin": "-23px 0% 0% 0%"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType, BackupItemProtectionState, PolicyName\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderAzureDiagnostics = ()\r\n{\r\n let PolicyTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Policy\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), PolicyName = columnifexists(\"PolicyName_s\", \"\"), ResourceId, TimeGenerated\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderResourceSpecific = ()\r\n{\r\n let PolicyTable = AddonAzureBackupPolicy \r\n| where OperationName == \"Policy\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueId, PolicyName, ResourceId, TimeGenerated\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated, ResourceId),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState, ResourceId};\r\nlet BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics | project  ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  project ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), BackupItemUniqueId, BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), \r\n    PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), TimeGenerated, ResourceId\r\n    | extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid) | project-away PolicyUniqueIdGuid, PolicyUniqueIdStr \r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderAzureDiagnostics ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderAzureDiagnostics | project BackupItemFrontEndSize = todouble(columnifexists(\"BackupItemFrontEndSize_s\", \"\")), BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet BackupItemAssociationAndStorageConsumptionUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific | project ProtectedContainerName, ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific |  project ProtectedContainerUniqueId, BackupItemUniqueId, BackupManagementServerUniqueId, PolicyUniqueId, TimeGenerated, ResourceId\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderResourceSpecific ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderResourceSpecific | project BackupItemFrontEndSize, BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestBackupItemAssociationAndStorageConsumptionTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= rightouter\r\n(CombinedTable | union isfuzzy = true  \r\n(BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics()\r\n),\r\n(BackupItemAssociationAndStorageConsumptionUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemProtectionState, PolicyName, ResourceId\r\n};\r\nLatestBackupItemAssociationAndStorageConsumptionTable\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| where PolicyName contains (@\"{PolicyName}\") or '*' in (@\"{PolicyName}\")\r\n| extend PolicyLink = strcat(ResourceId, \"/backupPolicies/\", PolicyName)\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMBs), count(BackupItemUniqueId) by PolicyName, ResourceId, PolicyLink \r\n| extend TempColumn = column_ifexists(tostring('{BillingMetricSortBy}'), \"sum_StorageConsumedInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{BillingMetricOrder}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| where page_num has ('{StorageMetricPageNumber}') or '*' in ('{StorageMetricPageNumber}')",
                "size": 3,
                "exportFieldName": "PolicyLink",
                "exportParameterName": "SelectedPolicyLink",
                "exportDefaultValue": "*",
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "PolicyName",
                            "formatter": 16,
                            "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "ResourceId",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "PolicyLink",
                            "formatter": 5,
                            "formatOptions": {
                                "linkColumn": "PolicyLink",
                                "linkTarget": "Resource",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "sum_BackupItemFrontEndSize",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "palette": "orange",
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "sum_StorageConsumedInMB",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "palette": "orange",
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "count_BackupItemUniqueId",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "palette": "orange",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TempColumn",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "ColumnToBeSorted",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "row_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "page_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "labelSettings": [
                        {
                            "columnId": "PolicyName",
                            "label": "Policy"
                        },
                        {
                            "columnId": "ResourceId",
                            "label": "Vault "
                        },
                        {
                            "columnId": "PolicyLink"
                        },
                        {
                            "columnId": "sum_BackupItemFrontEndSize",
                            "label": "Front End Storage (MB)"
                        },
                        {
                            "columnId": "sum_StorageConsumedInMBs",
                            "label": "Cloud Storage (MB)"
                        },
                        {
                            "columnId": "count_BackupItemUniqueId",
                            "label": "# BackupItems"
                        },
                        {
                            "columnId": "row_num"
                        },
                        {
                            "columnId": "page_num"
                        }
                    ]
                }
            },
            "showPin": true,
            "name": "query - 11",
            "styleSettings": {
                "margin": "-30px 0% 0% 0%",
                "showBorder": true
            }
        },
        {
            "type": 1,
            "content": {
                "json": "<p style=\"font-style:italic\">* ÂÄº‰∏∫Âë®ÊúüÁªìÊùüÊó∂ÁöÑÂÄº</p>"
            },
            "name": "text - 20"
        },
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:center\"><span style=\"font-size:14px;font-weight:600;\">Êåâ BackupItem ÊòæÁ§∫ÁöÑÂ≠òÂÇ®*</span> </div>"
            },
            "name": "text - 23"
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "nav",
                "links": [
                    {
                        "cellValue": " {\"01) BackupItem Name\":\"Name of the BackupItem\", \"02) BackupItem Type\":\"Type of the BackupItem\", \"03) Front End Storage (MB)\":\"Source size of the BackupItem\", \"04) Cloud Storage (MB)\":\"Total backend storage consumed by the BackupItem\", \"05) Policy\":\"Backup policy associated with the BackupItem\" }",
                        "linkTarget": "CellDetails",
                        "linkLabel": "‚ìò",
                        "style": "link"
                    },
                    {
                        "linkTarget": "parameter",
                        "linkLabel": "‚Üª",
                        "style": "link"
                    }
                ]
            },
            "customWidth": "0",
            "name": "links - 21",
            "styleSettings": {
                "showBorder": true
            }
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "parameters": [
                    {
                        "id": "2520d604-c6eb-48f8-aac4-665294faae82",
                        "version": "KqlParameterItem/1.0",
                        "name": "ContainerNameWithBackupItemNameInStorage",
                        "label": "Search Backup Item Name",
                        "type": 1,
                        "value": "",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "7bb4a71d-d932-4737-8715-d378be7ffba5",
                        "version": "KqlParameterItem/1.0",
                        "name": "BillingMetricSortBy2",
                        "label": "Sort By:",
                        "type": 2,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n{ \\\"value\\\": \\\"BackupItemFrontEndSize\\\", \\\"label\\\": \\\"Front End Storage (MB)\\\" }, \\r\\n{ \\\"value\\\": \\\"StorageConsumedInMBs\\\", \\\"label\\\": \\\"Cloud Storage (MB)\\\", \\\"selected\\\": \\\"true\\\" }]\"}",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 8,
                        "resourceType": "microsoft.insights/components"
                    },
                    {
                        "id": "595e5629-4f64-4038-bff5-5f3371259caa",
                        "version": "KqlParameterItem/1.0",
                        "name": "BillingMetricOrder2",
                        "label": "Order:",
                        "type": 2,
                        "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                        },
                        "jsonData": "[\r\n    { \"value\":\"Ascending\", \"selected\":true},\r\n    { \"value\":\"Descending\"}\r\n]",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "value": "Descending"
                    },
                    {
                        "id": "d1b7fe67-8c02-431c-904c-f82238dd112e",
                        "version": "KqlParameterItem/1.0",
                        "name": "StorageMetricPageNumber2",
                        "label": "Page:",
                        "type": 2,
                        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType, BackupItemProtectionState, PolicyName\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderAzureDiagnostics = ()\r\n{\r\n let PolicyTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Policy\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), PolicyName = columnifexists(\"PolicyName_s\", \"\"), ResourceId, TimeGenerated\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderResourceSpecific = ()\r\n{\r\n let PolicyTable = AddonAzureBackupPolicy \r\n| where OperationName == \"Policy\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueId, PolicyName, ResourceId, TimeGenerated\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated, ResourceId),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState, ResourceId};\r\nlet BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics | project  ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  project ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), BackupItemUniqueId, BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), \r\n    PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), TimeGenerated, ResourceId\r\n    | extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid) | project-away PolicyUniqueIdGuid, PolicyUniqueIdStr \r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderAzureDiagnostics ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderAzureDiagnostics | project BackupItemFrontEndSize = todouble(columnifexists(\"BackupItemFrontEndSize_s\", \"\")), BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet BackupItemAssociationAndStorageConsumptionUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific | project ProtectedContainerName, ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific |  project ProtectedContainerUniqueId, BackupItemUniqueId, BackupManagementServerUniqueId, PolicyUniqueId, TimeGenerated, ResourceId\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderResourceSpecific ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderResourceSpecific | project BackupItemFrontEndSize, BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestBackupItemAssociationAndStorageConsumptionTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= rightouter\r\n(CombinedTable | union isfuzzy = true  \r\n(BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics()\r\n),\r\n(BackupItemAssociationAndStorageConsumptionUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemProtectionState, PolicyName, ResourceId\r\n};\r\nLatestBackupItemAssociationAndStorageConsumptionTable\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| extend PolicyLink = strcat(ResourceId, \"/backupPolicies/\", PolicyName)\r\n| where PolicyLink == (@\"{SelectedPolicyLink}\") or '*' in (@\"{SelectedPolicyLink}\")\r\n| where ContainerNameWithBackupItemName contains (@\"{ContainerNameWithBackupItemNameInStorage}\") or '*' in (@\"{ContainerNameWithBackupItemNameInStorage}\")\r\n| summarize by ContainerNameWithBackupItemName, BMSTypeWithBackupItemType, BackupItemFrontEndSize, StorageConsumedInMBs, PolicyName, ResourceId, PolicyLink, ProtectedContainerName, BackupItemUniqueId  \r\n| extend TempColumn = column_ifexists(tostring('{BillingMetricSortBy2}'), \"StorageConsumedInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{BillingMetricOrder2}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| distinct page_num",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": "1",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "name": "parameters - 12",
            "styleSettings": {
                "margin": "-23px 0% 0% 0%"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType, BackupItemProtectionState, PolicyName\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderAzureDiagnostics = ()\r\n{\r\n let PolicyTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Policy\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), PolicyName = columnifexists(\"PolicyName_s\", \"\"), ResourceId, TimeGenerated\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderResourceSpecific = ()\r\n{\r\n let PolicyTable = AddonAzureBackupPolicy \r\n| where OperationName == \"Policy\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueId, PolicyName, ResourceId, TimeGenerated\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated, ResourceId),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState, ResourceId};\r\nlet BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics | project  ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  project ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), BackupItemUniqueId, BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), \r\n    PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), TimeGenerated, ResourceId\r\n    | extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid) | project-away PolicyUniqueIdGuid, PolicyUniqueIdStr \r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderAzureDiagnostics ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderAzureDiagnostics | project BackupItemFrontEndSize = todouble(columnifexists(\"BackupItemFrontEndSize_s\", \"\")), BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet BackupItemAssociationAndStorageConsumptionUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific | project ProtectedContainerName, ProtectedContainerUniqueId \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific |  project ProtectedContainerUniqueId, BackupItemUniqueId, BackupManagementServerUniqueId, PolicyUniqueId, TimeGenerated, ResourceId\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderResourceSpecific ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderResourceSpecific | project BackupItemFrontEndSize, BackupItemUniqueId, TimeGenerated \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestBackupItemAssociationAndStorageConsumptionTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= rightouter\r\n(CombinedTable | union isfuzzy = true  \r\n(BackupItemAssociationAndStorageConsumptionUnderAzureDiagnostics()\r\n),\r\n(BackupItemAssociationAndStorageConsumptionUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, \r\nBMSTypeWithBackupItemType, PolicyUniqueId, BackupItemFrontEndSize, StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemProtectionState, PolicyName, ResourceId\r\n};\r\nLatestBackupItemAssociationAndStorageConsumptionTable\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| extend PolicyLink = strcat(ResourceId, \"/backupPolicies/\", PolicyName)\r\n| where PolicyLink == (@\"{SelectedPolicyLink}\") or '*' in (@\"{SelectedPolicyLink}\")\r\n| where ContainerNameWithBackupItemName contains (@\"{ContainerNameWithBackupItemNameInStorage}\") or '*' in (@\"{ContainerNameWithBackupItemNameInStorage}\")\r\n| summarize by ContainerNameWithBackupItemName, BMSTypeWithBackupItemType, BackupItemFrontEndSize, StorageConsumedInMBs, PolicyName, ResourceId, PolicyLink, ProtectedContainerName, BackupItemUniqueId  \r\n| extend TempColumn = column_ifexists(tostring('{BillingMetricSortBy2}'), \"StorageConsumedInMBs\")\r\n| extend ColumnToBeSorted = iff(tostring('{BillingMetricOrder2}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| where page_num has ('{StorageMetricPageNumber2}') or '*' in ('{StorageMetricPageNumber2}')",
                "size": 0,
                "exportFieldName": "BackupItemUniqueId",
                "exportParameterName": "SelectedBackupItemUniqueId",
                "exportDefaultValue": "*",
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "ContainerNameWithBackupItemName",
                            "formatter": 16,
                            "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "BMSTypeWithBackupItemType",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "BackupItemFrontEndSize",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "palette": "orange",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "StorageConsumedInMB",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "palette": "orange",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "PolicyName",
                            "formatter": 16,
                            "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "ResourceId",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "PolicyLink",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "ProtectedContainerName",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "BackupItemUniqueId",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TempColumn",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "ColumnToBeSorted",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "row_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "page_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "labelSettings": [
                        {
                            "columnId": "ContainerNameWithBackupItemName",
                            "label": "BackupItem Name"
                        },
                        {
                            "columnId": "BMSTypeWithBackupItemType",
                            "label": "BackupItem Type"
                        },
                        {
                            "columnId": "BackupItemFrontEndSize",
                            "label": "Front End Storage (MB)"
                        },
                        {
                            "columnId": "StorageConsumedInMBs",
                            "label": "Cloud Storage (MB)"
                        },
                        {
                            "columnId": "PolicyName",
                            "label": "Policy"
                        },
                        {
                            "columnId": "ResourceId",
                            "label": ""
                        },
                        {
                            "columnId": "PolicyLink"
                        },
                        {
                            "columnId": "ProtectedContainerName"
                        },
                        {
                            "columnId": "BackupItemUniqueId"
                        },
                        {
                            "columnId": "row_num"
                        },
                        {
                            "columnId": "page_num"
                        }
                    ]
                }
            },
            "showPin": true,
            "name": "query - 10",
            "styleSettings": {
                "margin": "-30px 0% 0% 0%",
                "showBorder": true
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType, BackupItemProtectionState, BillingEntityName\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationHistoryUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationHistoryUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeHistoryUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeHistoryUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationHistoryUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationHistoryUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceHistoryUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\n let ProtectedInstanceTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), ProtectedInstanceCount = toint(columnifexists(\"ProtectedInstanceCount_s\", \"\"))\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceHistoryUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedInstanceHistoryTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceHistoryUnderAzureDiagnostics(isProtectedContainerBillingType) \r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(ProtectedInstanceHistoryUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType, TimeRangeEndDay\r\n};\r\nlet PolicyTableUnderAzureDiagnostics = ()\r\n{\r\n let PolicyTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Policy\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), PolicyName = columnifexists(\"PolicyName_s\", \"\"), ResourceId, TimeGenerated\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderResourceSpecific = ()\r\n{\r\n let PolicyTable = AddonAzureBackupPolicy \r\n| where OperationName == \"Policy\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueId, PolicyName, ResourceId, TimeGenerated\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState};\r\nlet BackupItemAssociationAndStorageConsumptionHistoryUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics | project  ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), ProtectedContainerUniqueId | distinct ProtectedContainerName, ProtectedContainerUniqueId\r\n| join kind= rightouter  (\r\n    BackupItemAssociationHistoryUnderAzureDiagnostics |  project ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), BackupItemUniqueId, BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), \r\n    PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), TimeGenerated, TimeRangeEndDay, ResourceId\r\n    | extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid) | project-away PolicyUniqueIdGuid, PolicyUniqueIdStr \r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderAzureDiagnostics ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeHistoryUnderAzureDiagnostics | project BackupItemFrontEndSize = todouble(columnifexists(\"BackupItemFrontEndSize_s\", \"\")), BackupItemUniqueId, TimeGenerated, TimeRangeEndDay \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationHistoryUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet BackupItemAssociationAndStorageConsumptionHistoryUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific | project ProtectedContainerName, ProtectedContainerUniqueId, TimeGenerated, TimeRangeEndDay \r\n| join kind= rightouter  (\r\n    BackupItemAssociationHistoryUnderResourceSpecific |  project ProtectedContainerUniqueId, BackupItemUniqueId, BackupManagementServerUniqueId, PolicyUniqueId, TimeGenerated, TimeRangeEndDay, ResourceId\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderResourceSpecific ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderResourceSpecific | project BackupItemFrontEndSize, BackupItemUniqueId, TimeGenerated, TimeRangeEndDay \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationHistoryUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestBackupItemAssociationAndStorageConsumptionHistoryTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= rightouter\r\n(CombinedTable | union isfuzzy = true  \r\n(BackupItemAssociationAndStorageConsumptionHistoryUnderAzureDiagnostics()\r\n),\r\n(BackupItemAssociationAndStorageConsumptionHistoryUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n};\r\nlet LatestBackupItemHistoryInfoTable = (){\r\nLatestBackupItemAssociationAndStorageConsumptionHistoryTable | summarize arg_max(TimeGenerated,  ContainerNameWithBackupItemName, BackupItemName, BMSTypeWithBackupItemType, PolicyUniqueId, PolicyName, ProtectedContainerUniqueId, ProtectedContainerName, BackupItemFrontEndSize, StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemProtectionState, ResourceId) by BackupItemUniqueId, TimeRangeEndDay\r\n};\r\nlet LatestProtectedInstanceHistoryTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceHistoryTable(true) \r\n| join kind= leftouter (LatestBackupItemHistoryInfoTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId, TimeRangeEndDay == TimeRangeEndDay\r\n| extend BillingEntityType = \"ProtectedContainer\", BillingEntityName = ProtectedContainerName, BillingEntityUniqueId = ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceHistoryTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceHistoryTable(false) \r\n| join kind= leftouter (LatestBackupItemHistoryInfoTable) on BackupItemUniqueId == BackupItemUniqueId, TimeRangeEndDay == TimeRangeEndDay\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName, BillingEntityUniqueId = BackupItemUniqueId\r\n};\r\nlet StorageHistoryMetric = ()\r\n{\r\nLatestBackupItemHistoryInfoTable\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| extend PolicyLink = strcat(ResourceId, \"/backupPolicies/\", PolicyName)\r\n| where PolicyLink == (@\"{SelectedPolicyLink}\") or '*' in (@\"{SelectedPolicyLink}\")\r\n| where BackupItemUniqueId == (@\"{SelectedBackupItemUniqueId}\") or '*' in (@\"{SelectedBackupItemUniqueId}\")\r\n};\r\nStorageHistoryMetric\r\n| summarize sum(StorageConsumedInMBs), sum(BackupItemFrontEndSize) by  TimeRangeEndDay",
                "size": 0,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "TimeRangeEndDay",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "sum_sum_StorageConsumedInMB",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "sum_sum_BackupItemFrontEndSize",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "labelSettings": []
                }
            },
            "conditionalVisibility": {
                "parameterName": "HiddenParameter",
                "comparison": "isEqualTo",
                "value": "1"
            },
            "name": "query - 12"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType, BackupItemProtectionState, BillingEntityName\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationHistoryUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationHistoryUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeHistoryUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeHistoryUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationHistoryUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationHistoryUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceHistoryUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\n let ProtectedInstanceTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), ProtectedInstanceCount = toint(columnifexists(\"ProtectedInstanceCount_s\", \"\"))\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceHistoryUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedInstanceHistoryTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceHistoryUnderAzureDiagnostics(isProtectedContainerBillingType) \r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(ProtectedInstanceHistoryUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType, TimeRangeEndDay\r\n};\r\nlet PolicyTableUnderAzureDiagnostics = ()\r\n{\r\n let PolicyTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Policy\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), PolicyName = columnifexists(\"PolicyName_s\", \"\"), ResourceId, TimeGenerated\r\n| extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet PolicyTableUnderResourceSpecific = ()\r\n{\r\n let PolicyTable = AddonAzureBackupPolicy \r\n| where OperationName == \"Policy\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| project PolicyUniqueId, PolicyName, ResourceId, TimeGenerated\r\n| summarize arg_max(TimeGenerated, *) by PolicyUniqueId, ResourceId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   PolicyTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType, BackupItemProtectionState};\r\nlet BackupItemAssociationAndStorageConsumptionHistoryUnderAzureDiagnostics = ()\r\n{\r\nBackupItemAssociationHistoryUnderAzureDiagnostics |  project ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), BackupItemUniqueId, BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), \r\n    PolicyUniqueIdStr = columnifexists(\"PolicyUniqueId_s\", \"\"), PolicyUniqueIdGuid = columnifexists(\"PolicyUniqueId_g\", \"\"), TimeGenerated, TimeRangeEndDay, ResourceId\r\n    | extend PolicyUniqueId = iff(PolicyUniqueIdGuid == \"\", PolicyUniqueIdStr, PolicyUniqueIdGuid) | project-away PolicyUniqueIdGuid, PolicyUniqueIdStr \r\n| join kind= leftouter  (\r\n    ProtectedContainerUnderAzureDiagnostics | project  ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), ProtectedContainerUniqueId | distinct ProtectedContainerName, ProtectedContainerUniqueId\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderAzureDiagnostics ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeHistoryUnderAzureDiagnostics | project BackupItemFrontEndSize = todouble(columnifexists(\"BackupItemFrontEndSize_s\", \"\")), BackupItemUniqueId, TimeGenerated, TimeRangeEndDay \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationHistoryUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet BackupItemAssociationAndStorageConsumptionHistoryUnderResourceSpecific = ()\r\n{\r\nBackupItemAssociationHistoryUnderResourceSpecific |  project ProtectedContainerUniqueId, BackupItemUniqueId, BackupManagementServerUniqueId, PolicyUniqueId, TimeGenerated, TimeRangeEndDay, ResourceId\r\n| join kind= leftouter  (\r\nProtectedContainerUnderResourceSpecific | project ProtectedContainerName, ProtectedContainerUniqueId, TimeGenerated, TimeRangeEndDay \r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| join kind= leftouter (\r\n PolicyTableUnderResourceSpecific ) on PolicyUniqueId == PolicyUniqueId, ResourceId == ResourceId\r\n| join kind= fullouter (\r\n   BackupItemFrontEndSizeUnderResourceSpecific | project BackupItemFrontEndSize, BackupItemUniqueId, TimeGenerated, TimeRangeEndDay \r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n| join kind= fullouter (\r\n   StorageAssociationHistoryUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated, TimeRangeEndDay\r\n) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestBackupItemAssociationAndStorageConsumptionHistoryTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= rightouter\r\n(CombinedTable | union isfuzzy = true  \r\n(BackupItemAssociationAndStorageConsumptionHistoryUnderAzureDiagnostics()\r\n),\r\n(BackupItemAssociationAndStorageConsumptionHistoryUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n};\r\nlet LatestBackupItemHistoryInfoTable = (){\r\nLatestBackupItemAssociationAndStorageConsumptionHistoryTable | summarize arg_max(TimeGenerated,  ContainerNameWithBackupItemName, BackupItemName, BMSTypeWithBackupItemType, PolicyUniqueId, PolicyName, ProtectedContainerUniqueId, ProtectedContainerName, BackupItemFrontEndSize, StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemProtectionState) by BackupItemUniqueId, TimeRangeEndDay\r\n};\r\nlet LatestProtectedInstanceHistoryTableFromProtectedContainerUniqueId = ()\r\n{ \r\nTotalProtectedInstanceHistoryTable(true) \r\n| join kind= leftouter (LatestBackupItemHistoryInfoTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId, TimeRangeEndDay == TimeRangeEndDay\r\n| extend BillingEntityType = \"ProtectedContainer\", BillingEntityName = ProtectedContainerName, BillingEntityUniqueId = ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceHistoryTableFromBackupItemUniqueId = ()\r\n{ \r\nTotalProtectedInstanceHistoryTable(false) \r\n| join kind= leftouter (LatestBackupItemHistoryInfoTable) on BackupItemUniqueId == BackupItemUniqueId, TimeRangeEndDay == TimeRangeEndDay\r\n| extend BillingEntityType = \"BackupItem\", BillingEntityName = ContainerNameWithBackupItemName, BillingEntityUniqueId = BackupItemUniqueId\r\n};\r\nlet ProtectedInstanceHistoryMetric = ( ) \r\n{ union \r\n(LatestProtectedInstanceHistoryTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceHistoryTableFromBackupItemUniqueId())\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where BackupItemProtectionState in (@\"{BackupItemProtectionState}\") or '*' in (@\"{BackupItemProtectionState}\")\r\n| summarize sum(BackupItemFrontEndSize), sum(StorageConsumedInMBs) by BillingEntityUniqueId, BillingEntityName, TimeRangeEndDay, ProtectedInstanceCount \r\n| project-away BillingEntityUniqueId\r\n};\r\nProtectedInstanceHistoryMetric()\r\n| summarize sum(ProtectedInstanceCount) by  TimeRangeEndDay",
                "size": 0,
                "aggregation": 5,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "title": "Protected Instance Trend",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "linechart"
            },
            "customWidth": "33",
            "showPin": true,
            "name": "query - 10"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"ab996b3f-4835-4ba6-ad76-3159f010117f\",\"mergeType\":\"table\",\"leftTable\":\"query - 12\"}],\"projectRename\":[{\"originalName\":\"[query - 12].TimeRangeEndDay\",\"mergedName\":\"TimeRangeEndDay\",\"fromId\":\"ab996b3f-4835-4ba6-ad76-3159f010117f\"},{\"originalName\":\"[query - 12].sum_sum_BackupItemFrontEndSize\",\"mergedName\":\"sum_sum_BackupItemFrontEndSize\",\"fromId\":\"ab996b3f-4835-4ba6-ad76-3159f010117f\"},{\"originalName\":\"[query - 12].sum_BackupItemFrontEndSize\",\"mergedName\":\"sum_BackupItemFrontEndSize\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 12].sum_sum_StorageConsumedInMB\"},{\"originalName\":\"[query - 12].sum_StorageConsumedInMBs\"}]}",
                "size": 0,
                "aggregation": 5,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "title": "Frontend Storage Trend",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 7,
                "resourceType": "microsoft.insights/components",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "linechart",
                "gridSettings": {
                    "sortBy": [
                        {
                            "itemKey": "JobOperation",
                            "sortOrder": 1
                        }
                    ],
                    "labelSettings": []
                },
                "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                        "columnMatch": "JobStatus",
                        "formatter": 1
                    },
                    "leftContent": {
                        "columnMatch": "count_JobStatus",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto"
                        },
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                },
                "graphSettings": {
                    "type": 0,
                    "topContent": {
                        "columnMatch": "JobStatus",
                        "formatter": 1
                    },
                    "centerContent": {
                        "columnMatch": "count_JobStatus",
                        "formatter": 1,
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                }
            },
            "customWidth": "33",
            "name": "query - 8"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"ab996b3f-4835-4ba6-ad76-3159f0101181\",\"mergeType\":\"table\",\"leftTable\":\"query - 12\"}],\"projectRename\":[{\"originalName\":\"[query - 12].TimeRangeEndDay\",\"mergedName\":\"TimeRangeEndDay\",\"fromId\":\"ab996b3f-4835-4ba6-ad76-3159f0101181\"},{\"originalName\":\"[query - 12].sum_sum_StorageConsumedInMB\",\"mergedName\":\"sum_sum_StorageConsumedInMB\",\"fromId\":\"ab996b3f-4835-4ba6-ad76-3159f0101181\"},{\"originalName\":\"[query - 12].sum_StorageConsumedInMBs\",\"mergedName\":\"sum_StorageConsumedInMBs\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 12].sum_sum_BackupItemFrontEndSize\"},{\"originalName\":\"[query - 12].sum_BackupItemFrontEndSize\"}]}",
                "size": 0,
                "aggregation": 5,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "title": "Cloud Storage Trend",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 7,
                "resourceType": "microsoft.insights/components",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "linechart"
            },
            "customWidth": "33",
            "name": "query - 9"
        }
    ],
    "styleSettings": {},
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}