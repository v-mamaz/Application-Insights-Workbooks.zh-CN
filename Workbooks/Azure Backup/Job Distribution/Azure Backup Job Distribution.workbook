{
    "version": "Notebook/1.0",
    "items": [
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:left;float:left;\"><span data-ttu-id=\"70699-101\"><span style=\"font-size:16px;font-weight:600\">ÈÄâÊã© Log Analytics Â∑•‰ΩúÂå∫ </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-101\"><span style=\"font-size:16px;font-weight:600\">Select Log Analytics Workspace </span> </span></span><br> <span data-ttu-id=\"70699-102\"><span style=\"font-size:12px;\"><a href=\"#\">Â¶Ç‰ΩïÈÖçÁΩÆÂ§á‰ªΩÊä•Ë°®ÁöÑ‰øùÁÆ°Â∫ìËØäÊñ≠ËÆæÁΩÆ </a> </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-102\"><span style=\"font-size:12px;\"><a href=\"#\">How to configure vault diagnostic settings for backup reports </a> </span> </span></span></div> <div style=\"text-align:right;float:right\"><span data-ttu-id=\"70699-103\"><span style=\"font-size:12px;\"><a href=\"#\">Power BI Êä•Ë°®ÂèëÁîü‰∫Ü‰ªÄ‰πàÔºü</a> </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-103\"><span style=\"font-size:12px;\"><a href=\"#\">What happened to the Power BI reports? </a> </span> </span></span></div>"
            },
            "name": "text - 15"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "value::all"
                ],
                "parameters": [
                    {
                        "id": "6c14aa18-29d3-4b94-81a9-4499c98aa9bb",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscriptions",
                        "type": 6,
                        "description": "<span data-ttu-id=\"70699-104\">Âú®ÂÖ∂‰∏≠ÂàõÂª∫‰∫Ü LA Â∑•‰ΩúÂå∫ÁöÑËÆ¢ÈòÖ</span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-104\">The subscriptions in which your LA Workspaces were created</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "includeAll": false
                        },
                        "timeContext": {
                            "durationMs": 604800000
                        }
                    },
                    {
                        "id": "f430b9f7-0bcb-49de-ad5d-67547345d26e",
                        "version": "KqlParameterItem/1.0",
                        "name": "Workspaces",
                        "type": 5,
                        "description": "<span data-ttu-id=\"70699-105\">Âú® Azure Â§á‰ªΩËØäÊñ≠ËÆæÁΩÆ‰∏≠ÈÖçÁΩÆÁöÑ LA Â∑•‰ΩúÂå∫</span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-105\">The LA Workspaces which you configured in Azure Backup Diagnostic settings</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
                        "crossComponentResources": [
                            "{Subscriptions}"
                        ],
                        "value": [],
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                    }
                ],
                "style": "above",
                "queryType": 1,
                "resourceType": "microsoft.resourcegraph/resources"
            },
            "customWidth": "50",
            "name": "parameters - 1"
        },
        {
            "type": 1,
            "content": {
                "json": "__________"
            },
            "name": "text - 12"
        },
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:left;float:left;\"><span data-ttu-id=\"70699-106\"><span style=\"font-size:16px;font-weight:600\">Êä•Ë°®Á≠õÈÄâÂô® </span></span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-106\"><span style=\"font-size:16px;font-weight:600\">Report Filters </span></span></span></div> <div style=\"text-align:right;float:right\"><span data-ttu-id=\"70699-107\"><span style=\"font-size:12px;\"><a href=\"#\">Â¶Ç‰Ωï‰ΩøÁî®Â§á‰ªΩÊä•Ë°®Ôºü</a></span></span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-107\"><span style=\"font-size:12px;\"><a href=\"#\">How to use backup reports?</a></span></span></span></div>"
            },
            "name": "text - 16"
        },
        {
            "type": 1,
            "content": {
                "json": "<p> <span data-ttu-id=\"70699-108\">üí° <span style=\"font-size:12px; font-style:italic\"> Á≠õÈÄâÂô®Âú®ÊØè‰∏™È°µÈù¢‰ªéÂ∑¶ÂêëÂè≥„ÄÅ‰ªé‰∏äÂêë‰∏ãÂ∫îÁî®„ÄÇ</span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-108\">üí° <span style=\"font-size:12px; font-style:italic\"> Filters are applied left to right and top to bottom on each page. </span> </span></span></p>"
            },
            "name": "text - 17"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "parameters": [
                    {
                        "id": "8c4ae44c-fa9a-4498-aedc-736a56e64b43",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "value": {
                            "durationMs": 604800000
                        },
                        "typeSettings": {
                            "selectableValues": [
                                {
                                    "durationMs": 3600000
                                },
                                {
                                    "durationMs": 14400000
                                },
                                {
                                    "durationMs": 43200000
                                },
                                {
                                    "durationMs": 86400000
                                },
                                {
                                    "durationMs": 172800000
                                },
                                {
                                    "durationMs": 259200000
                                },
                                {
                                    "durationMs": 604800000
                                },
                                {
                                    "durationMs": 1209600000
                                },
                                {
                                    "durationMs": 2419200000
                                },
                                {
                                    "durationMs": 2592000000
                                },
                                {
                                    "durationMs": 5184000000
                                },
                                {
                                    "durationMs": 7776000000
                                }
                            ],
                            "allowCustom": true
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "25bddfad-0b52-4d19-97ca-19f685baa2b3",
                        "version": "KqlParameterItem/1.0",
                        "name": "BMSTypeWithBackupItemType",
                        "label": "Backup Item Type",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemUnderAzureDiagnostics = ( ) \r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend  BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\") \r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemUnderResourceSpecific = ( ) \r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n};\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct BackupManagementType, BackupItemType\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType) \r\n| distinct BMSTypeWithBackupItemType",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*",
                            "showDefault": false
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "cc0723ef-c07f-4921-b452-5239baefdabe",
                        "version": "KqlParameterItem/1.0",
                        "name": "Location",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| distinct ResourceId, AzureDataCenter, VaultName\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| distinct ResourceId, AzureDataCenter, VaultName;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| project BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), ResourceId\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct AzureDataCenter};\r\nLatestBackupItemTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "4616d039-d492-4f98-b0cb-275557da1126",
                        "version": "KqlParameterItem/1.0",
                        "name": "Vault",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId, AzureDataCenter, VaultName\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId, AzureDataCenter, VaultName;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| project BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), ResourceId\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct VaultName};\r\nLatestBackupItemTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 7"
        },
        {
            "type": 1,
            "content": {
                "json": "<span data-ttu-id=\"70699-109\">‚ìò <span style=\"font-size:12px;font-style:italic\"> ÊâÄÊúâÊó•ÊúüÊó∂Èó¥ÈÉΩÂ§Ñ‰∫éÈó®Êà∑Êó∂Âå∫‰∏≠„ÄÇÊä•Ë°®‰∏≠‰∏çÊòæÁ§∫ÂΩìÂâçÊú™Êª°‰∏ÄÂ§©ÁöÑÊï∞ÊçÆ„ÄÇ</span></span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-109\">‚ìò <span style=\"font-size:12px;font-style:italic\"> All datetimes are in portal timezone. Data for the current partial day is not shown in the reports.</span></span></span></div>"
            },
            "name": "text - 18"
        },
        {
            "type": 1,
            "content": {
                "json": "_________"
            },
            "name": "text - 13"
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "nav",
                "links": [
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Summary",
                        "subTarget": "{BackupManagementType}",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Summary",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Protected Instances",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Protected Instances",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Storage",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Storage",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "parameters - 1",
                        "linkTarget": "step",
                        "linkLabel": "Job Distribution",
                        "style": "primary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Jobs",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Job Details",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Job Details",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alert Distribution",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Alert Distribution",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "FilterBackupItemGridBasedOnParameterSelection",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alert Details",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Alert Details",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    }
                ]
            },
            "customWidth": "100",
            "name": "links - 8"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable =  materialize(union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where JobUniqueId != \"\"\r\n| distinct JobStatus, JobUniqueId); \r\nlet JobSuccessPercent = LatestJobTable\r\n| extend success=iff((JobStatus == \"Completed\" or JobStatus == \"CompletedWithWarnings\") , 1 , 0)\r\n| extend record = 1 // to be used for total row count\r\n| summarize SuccessfulCount =sum(success), TotalCount=sum(record)\r\n| extend JobSuccessPercentage = (SuccessfulCount*100)/todouble(TotalCount)\r\n| project JobSuccessPercentage \r\n| extend  Key = pack_array(\"Success%\"), Value = pack_array( JobSuccessPercentage), Row = pack_array(1000)\r\n| project Key, Value, Row\r\n| mvexpand  Key, Value, Row; \r\nlet JobStatusTable = LatestJobTable\r\n| summarize dcount(JobUniqueId) by JobStatus\r\n| order by JobStatus asc\r\n| extend row_num = row_number()\r\n| extend  Key = pack_array(JobStatus), Value = pack_array( dcount_JobUniqueId), Row = pack_array(row_num)\r\n| project Key, Value, Row\r\n| mvexpand  Key, Value, Row;\r\nunion  JobStatusTable, JobSuccessPercent \r\n| order by toint(Row) asc",
                "size": 4,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "tiles",
                "tileSettings": {
                    "titleContent": {
                        "columnMatch": "Key",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "subtitleContent": {
                        "columnMatch": "SubTitle",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        },
                        "numberFormat": {
                            "unit": 0,
                            "options": {
                                "style": "decimal",
                                "maximumFractionDigits": 2
                            }
                        }
                    },
                    "showBorder": true
                }
            },
            "showPin": true,
            "name": "query - 10"
        },
        {
            "type": 1,
            "content": {
                "json": "_____________________________"
            },
            "name": "text - 15"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "parameters": [
                    {
                        "id": "71c5a2f9-67e4-48d4-aec3-4c4116f04acd",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobOperation",
                        "label": "Job Operation",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable =  union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where JobUniqueId != \"\"\r\n| distinct JobOperation; \r\nLatestJobTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "49be13b9-6869-4cb2-94e0-b122508d1efb",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobStatus",
                        "label": "Job Status",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable =  union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where JobUniqueId != \"\"\r\n| distinct JobStatus; \r\nLatestJobTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "84fef06a-bc14-40e3-a6c5-68647b3f5474",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobFailureCode",
                        "label": "Job Failure Code",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable =  union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where JobUniqueId != \"\"\r\n| distinct JobFailureCode; \r\nLatestJobTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 7"
        },
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:center\"><span data-ttu-id=\"70699-110\"><span style=\"font-size:14px;font-weight:600;\">Êåâ BackupItem ÊòæÁ§∫ÁöÑÂë®ÊúüÂÜÖ‰Ωú‰∏öÂàÜÂèë</span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"70699-110\"><span style=\"font-size:14px;font-weight:600;\">Distribution of Jobs in period by BackupItem </span> </span></span></div>"
            },
            "name": "text - 20"
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "nav",
                "links": [
                    {
                        "cellValue": " {\"01) BackupItem Name\":\"Name of the BackupItem\", \"02) BackupItem Type\":\"Type of the BackupItem\", \"03) # Jobs Failed\":\"Number of jobs on the BackupItem that failed in the period\", \"04) Job Success %\":\"% of jobs on the BackupItem that were successful in the period\", \"05) Avg Data Transferred (MB)\":\"Average data transferred by jobs on the BackupItem\", \"06) Avg Job Duration (hrs)\":\"Average duration of jobs on the BackupItem\" }",
                        "linkTarget": "CellDetails",
                        "linkLabel": "‚ìò",
                        "style": "link"
                    },
                    {
                        "linkTarget": "parameter",
                        "linkLabel": "‚Üª",
                        "style": "link"
                    }
                ]
            },
            "customWidth": "0",
            "name": "links - 19",
            "styleSettings": {
                "showBorder": true
            }
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "parameters": [
                    {
                        "id": "a29464c3-34f0-4d60-82bb-614b8128b7f9",
                        "version": "KqlParameterItem/1.0",
                        "name": "ContainerNameWithBackupItemName",
                        "label": "Search BackupItem Name",
                        "type": 1,
                        "value": "",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "5dc2a074-b510-44f2-9530-cfcbd159b59c",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobMetricSortBy",
                        "label": "Sort By:",
                        "type": 2,
                        "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                        },
                        "jsonData": "[{ \"value\": \"FailureCount\", \"label\": \"# Jobs Failed\" },\r\n{ \"value\": \"AvgDataTransferred\", \"label\": \"Avg data transferred (MB)\" }, \r\n{ \"value\": \"AvgJobDuration\", \"label\": \"Avg Job Duration (hrs)\" },\r\n{ \"value\": \"SuccessPercent\", \"label\": \"Job Success %\", \"selected\": \"true\" }]",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "df3cc03c-53f7-4523-a29b-e50bf1b6d922",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobMetricOrder",
                        "label": "Order:",
                        "type": 2,
                        "typeSettings": {
                            "additionalResourceOptions": [],
                            "showDefault": false
                        },
                        "jsonData": "[\r\n    { \"value\":\"Ascending\", \"selected\":true},\r\n    { \"value\":\"Descending\"}\r\n]",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "356e4bfd-7e3d-4e48-89c0-b03efb72b9dc",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobMetricPageNumber",
                        "label": "Page:",
                        "type": 2,
                        "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where ContainerNameWithBackupItemName contains (@\"{ContainerNameWithBackupItemName}\") or '*' in (@\"{ContainerNameWithBackupItemName}\")\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable = ()\r\n{ union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where ContainerNameWithBackupItemName contains (@\"{ContainerNameWithBackupItemName}\") or '*' in (@\"{ContainerNameWithBackupItemName}\")\r\n| where JobUniqueId != \"\" or ContainerNameWithBackupItemName != \"\"\r\n}; \r\nlet JobMetric = ()\r\n{\r\n// Calculate percentage\r\nLatestJobTable\r\n| extend failed=iff(JobStatus == \"Failed\" , 1 , 0)\r\n| extend record = iff(JobUniqueId != \"\", 1, 0)  // to be used for total row count\r\n| summarize FailureCount =sum(failed), TotalCount=sum(record), AvgDataTransferred =avg(DataTransferredInMB), AvgJobDuration = avg(JobDurationInSec)/3600 by ContainerNameWithBackupItemName, BMSTypeWithBackupItemType\r\n| extend SuccessPercent = ((TotalCount - FailureCount) *100)/todouble(TotalCount)\r\n};\r\nJobMetric\r\n| extend TempColumn = column_ifexists(tostring('{JobMetricSortBy}'), \"SuccessPercent\")\r\n| extend ColumnToBeSorted = iff(tostring('{JobMetricOrder}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| distinct page_num",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": "1",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "90",
            "name": "parameters - 7",
            "styleSettings": {
                "margin": "-23px 0% 0% 0%",
                "padding": "0% 0% 0% 0%"
            }
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [],
                "parameters": [
                    {
                        "id": "18dffc0f-abf1-4974-96c8-df68b3aa8f39",
                        "version": "KqlParameterItem/1.0",
                        "name": "P1",
                        "type": 1,
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "customWidth": "0",
            "name": "parameters - 14",
            "styleSettings": {
                "padding": "0% 0% 0% 0%"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where ContainerNameWithBackupItemName contains (@\"{ContainerNameWithBackupItemName}\") or '*' in (@\"{ContainerNameWithBackupItemName}\")\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable = ()\r\n{ union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where ContainerNameWithBackupItemName contains (@\"{ContainerNameWithBackupItemName}\") or '*' in (@\"{ContainerNameWithBackupItemName}\")\r\n| where JobUniqueId != \"\" or ContainerNameWithBackupItemName != \"\"\r\n}; \r\nlet JobMetric = ()\r\n{\r\n// Calculate percentage\r\nLatestJobTable\r\n| extend failed=iff(JobStatus == \"Failed\" , 1 , 0)\r\n| extend record = iff(JobUniqueId != \"\", 1, 0)  // to be used for total row count\r\n| summarize FailureCount =sum(failed), TotalCount=sum(record), AvgDataTransferred =avg(DataTransferredInMB), AvgJobDuration = avg(JobDurationInSec)/3600 by ContainerNameWithBackupItemName, BMSTypeWithBackupItemType\r\n| extend SuccessPercent = ((TotalCount - FailureCount) *100)/todouble(TotalCount)\r\n};\r\nJobMetric\r\n| extend TempColumn = column_ifexists(tostring('{JobMetricSortBy}'), \"SuccessPercent\")\r\n| extend ColumnToBeSorted = iff(tostring('{JobMetricOrder}') == \"Ascending\", todouble(TempColumn) - 90000000, 90000000 - todouble(TempColumn))\r\n| sort by ColumnToBeSorted asc nulls last\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/10 + 1))\r\n| where page_num has ('{JobMetricPageNumber}') or '*' in ('{JobMetricPageNumber}')",
                "size": 1,
                "exportFieldName": "ContainerNameWithBackupItemName",
                "exportParameterName": "SelectedContainerNameWithBackupItemName",
                "exportDefaultValue": "*",
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "ContainerNameWithBackupItemName",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "BMSTypeWithBackupItemType",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "FailureCount",
                            "formatter": 1,
                            "formatOptions": {
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "AvgDataTransferred",
                            "formatter": 1,
                            "formatOptions": {
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 4
                                }
                            }
                        },
                        {
                            "columnMatch": "AvgJobDuration",
                            "formatter": 1,
                            "formatOptions": {
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "SuccessPercent",
                            "formatter": 18,
                            "formatOptions": {
                                "linkTarget": "Url",
                                "showIcon": true,
                                "thresholdsOptions": "colors",
                                "thresholdsGrid": [
                                    {
                                        "operator": "==",
                                        "thresholdValue": "100",
                                        "representation": "green",
                                        "text": "{0}{1}"
                                    },
                                    {
                                        "operator": "<",
                                        "thresholdValue": "50",
                                        "representation": "red",
                                        "text": "{0}{1}"
                                    },
                                    {
                                        "operator": "<",
                                        "thresholdValue": "100",
                                        "representation": "yellow",
                                        "text": "{0}{1}"
                                    },
                                    {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": null,
                                        "text": "{0}{1}"
                                    }
                                ]
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "row_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "page_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "labelSettings": [
                        {
                            "columnId": "ContainerNameWithBackupItemName",
                            "label": "Backup Item Name"
                        },
                        {
                            "columnId": "BMSTypeWithBackupItemType",
                            "label": "Backup Item Type"
                        },
                        {
                            "columnId": "FailureCount",
                            "label": "# Jobs Failed"
                        },
                        {
                            "columnId": "AvgDataTransferred",
                            "label": "Avg data transferred (MB)"
                        },
                        {
                            "columnId": "AvgJobDuration",
                            "label": "Avg Job Duration (hrs)"
                        },
                        {
                            "columnId": "SuccessPercent",
                            "label": "Job Success %"
                        },
                        {
                            "columnId": "row_num"
                        },
                        {
                            "columnId": "page_num"
                        }
                    ]
                }
            },
            "conditionalVisibility": {
                "parameterName": "P1",
                "comparison": "isEqualTo",
                "value": "1"
            },
            "name": "query - 11",
            "styleSettings": {
                "padding": "0% 0% 0% 0%",
                "showBorder": true
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"e72012f4-9846-4404-ac3e-31562d1200dc\",\"mergeType\":\"table\",\"leftTable\":\"query - 11\"}],\"projectRename\":[{\"originalName\":\"[query - 11].ContainerNameWithBackupItemName\",\"mergedName\":\"Backup Item Name\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].BMSTypeWithBackupItemType\",\"mergedName\":\"Backup Item Type\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].FailureCount\",\"mergedName\":\"# Jobs Failed\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].SuccessPercent\",\"mergedName\":\"Job Success %\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].AvgDataTransferred\",\"mergedName\":\"Avg data transferred (MB)\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].AvgJobDuration\",\"mergedName\":\"Avg Job Duration (hrs)\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].row_num\",\"mergedName\":\"row_num\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].page_num\",\"mergedName\":\"page_num\",\"fromId\":\"e72012f4-9846-4404-ac3e-31562d1200dc\"},{\"originalName\":\"[query - 11].BackupItemName\",\"mergedName\":\"BackupItemName\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].JobOperation\",\"mergedName\":\"JobOperation\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].JobStatus\",\"mergedName\":\"JobStatus\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].DataTransferredInMB\",\"mergedName\":\"DataTransferredInMB\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].JobDurationInSec\",\"mergedName\":\"JobDurationInSec\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].JobUniqueId\",\"mergedName\":\"JobUniqueId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].JobFailureCode\",\"mergedName\":\"JobFailureCode\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].BackupItemUniqueId\",\"mergedName\":\"BackupItemUniqueId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].ProtectedContainerUniqueId\",\"mergedName\":\"ProtectedContainerUniqueId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].BackupManagementServerUniqueId\",\"mergedName\":\"BackupManagementServerUniqueId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].TotalCount\",\"mergedName\":\"TotalCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].TempColumn\",\"mergedName\":\"TempColumn\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 11].ColumnToBeSorted\",\"mergedName\":\"ColumnToBeSorted\",\"fromId\":\"unknown\"}]}",
                "size": 0,
                "exportFieldName": "Backup Item Name",
                "exportParameterName": "SelectedContainerNameWithBackupItemName",
                "exportDefaultValue": "*",
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 7,
                "resourceType": "microsoft.insights/components",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Backup Item Name",
                            "formatter": 16,
                            "formatOptions": {
                                "linkTarget": "Resource",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "Backup Item Type",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "# Jobs Failed",
                            "formatter": 4,
                            "formatOptions": {
                                "palette": "orange",
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "Job Success %",
                            "formatter": 18,
                            "formatOptions": {
                                "linkTarget": "WorkbookTemplate",
                                "showIcon": true,
                                "thresholdsOptions": "colors",
                                "thresholdsGrid": [
                                    {
                                        "operator": "==",
                                        "thresholdValue": "100",
                                        "representation": "green",
                                        "text": "{0}{1}"
                                    },
                                    {
                                        "operator": "<",
                                        "thresholdValue": "50",
                                        "representation": "red",
                                        "text": "{0}{1}"
                                    },
                                    {
                                        "operator": "<",
                                        "thresholdValue": "100",
                                        "representation": "yellow",
                                        "text": "{0}{1}"
                                    },
                                    {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": null,
                                        "text": "{0}{1}"
                                    }
                                ],
                                "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/Azure Backup/Job Details",
                                    "typeSource": "default",
                                    "gallerySource": "static",
                                    "gallery": "Azure Monitor"
                                }
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "Avg data transferred (MB)",
                            "formatter": 4,
                            "formatOptions": {
                                "palette": "orange",
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "Avg Job Duration (hrs)",
                            "formatter": 4,
                            "formatOptions": {
                                "palette": "orange",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "row_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "page_num",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TotalCount",
                            "formatter": 5,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "labelSettings": [
                        {
                            "columnId": "Backup Item Name",
                            "label": "BackupItem Name"
                        },
                        {
                            "columnId": "Backup Item Type",
                            "label": "BackupItem Type"
                        },
                        {
                            "columnId": "# Jobs Failed"
                        },
                        {
                            "columnId": "Job Success %"
                        },
                        {
                            "columnId": "Avg data transferred (MB)",
                            "label": "Avg Data Transferred (MB)"
                        },
                        {
                            "columnId": "Avg Job Duration (hrs)"
                        },
                        {
                            "columnId": "row_num"
                        },
                        {
                            "columnId": "page_num"
                        },
                        {
                            "columnId": "TotalCount"
                        }
                    ]
                }
            },
            "name": "query - 13",
            "styleSettings": {
                "margin": "-30px 0% 0% 0%",
                "showBorder": true
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where ContainerNameWithBackupItemName == (@\"{SelectedContainerNameWithBackupItemName}\") or '*' in (@\"{SelectedContainerNameWithBackupItemName}\")\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId, TimeGenerated\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId, TimeGenerated \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId, TimeGenerated \r\n};\r\nlet LatestJobTable =  union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where ContainerNameWithBackupItemName == (@\"{SelectedContainerNameWithBackupItemName}\") or '*' in (@\"{SelectedContainerNameWithBackupItemName}\")\r\n// Only When JobCount is >= 1\r\n| where JobUniqueId != \"\"; \r\nLatestJobTable\r\n| summarize count(JobStatus) by   JobStatus, bin(TimeGenerated, 1d)",
                "size": 0,
                "aggregation": 5,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "title": "Jobs by Status over Time",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "categoricalbar"
            },
            "customWidth": "33",
            "showPin": true,
            "name": "query - 10"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where ContainerNameWithBackupItemName == (@\"{SelectedContainerNameWithBackupItemName}\") or '*' in (@\"{SelectedContainerNameWithBackupItemName}\")\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable =  union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where ContainerNameWithBackupItemName == (@\"{SelectedContainerNameWithBackupItemName}\") or '*' in (@\"{SelectedContainerNameWithBackupItemName}\")\r\n| where JobUniqueId != \"\"; \r\nLatestJobTable\r\n| summarize count(JobStatus) by JobOperation, JobStatus",
                "size": 0,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "title": "Jobs by Job Operation and Status",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "categoricalbar",
                "gridSettings": {
                    "sortBy": [
                        {
                            "itemKey": "JobOperation",
                            "sortOrder": 1
                        }
                    ],
                    "labelSettings": []
                },
                "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                        "columnMatch": "JobStatus",
                        "formatter": 1
                    },
                    "leftContent": {
                        "columnMatch": "count_JobStatus",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto"
                        },
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                },
                "graphSettings": {
                    "type": 0,
                    "topContent": {
                        "columnMatch": "JobStatus",
                        "formatter": 1
                    },
                    "centerContent": {
                        "columnMatch": "count_JobStatus",
                        "formatter": 1,
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "query - 8"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| extend VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\")\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedContainerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(ProtectedContainerUnderAzureDiagnostics()\r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), ProtectedContainerName =  columnifexists(\"ProtectedContainerName_s\", \"\")),\r\n ProtectedContainerUnderResourceSpecific()\r\n| where ProtectedContainerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\")\r\n// BackupItemName Not applicable\r\n| distinct ProtectedContainerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupManagementServerUnderAzureDiagnostics = ()\r\n{\r\nlet BackupManagementServerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupManagementServer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend OldBackupManagementServerUniqueId = columnifexists(\"BackupManagmentServerUniqueId_s\", \"\"), NewBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\")\r\n| extend BackupManagementServerUniqueId = iff(NewBackupManagementServerUniqueId == \"\", OldBackupManagementServerUniqueId, NewBackupManagementServerUniqueId)\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupManagementServerUnderResourceSpecific = ()\r\n{\r\nlet BackupManagementServerTable =CoreAzureBackup\r\n| where OperationName == \"BackupManagementServer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupManagementServerUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupManagementServerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalBackupManagementServerTable = ( ) \r\n{\r\nCombinedTable | union isfuzzy = true \r\n(BackupManagementServerUnderAzureDiagnostics() | extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n BackupManagementServerUnderResourceSpecific()\r\n| where BackupManagementServerUniqueId != \"\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\"), BackupItemName = \"NaN\", ContainerNameWithBackupItemName = \"NaN\"\r\n| distinct BackupManagementServerUniqueId, BMSTypeWithBackupItemType, BackupItemName, ContainerNameWithBackupItemName \r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= leftouter (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nProtectedContainerUnderAzureDiagnostics \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderAzureDiagnostics |  extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet BackupItemAssociationWithProtectedContainerUnderResourceSpecific = ()\r\n{\r\nProtectedContainerUnderResourceSpecific \r\n| join kind= rightouter  (\r\n    BackupItemAssociationUnderResourceSpecific\r\n) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = () {CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| extend BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| project BackupItemUniqueId,  BackupItemName, BMSTypeWithBackupItemType};\r\nlet LatestBackupItemWithProtectedContainerTable = () \r\n{\r\nLatestBackupItemDimensionTable\r\n| join kind= rightouter (CombinedTable | union isfuzzy = true   \r\n(BackupItemAssociationWithProtectedContainerUnderAzureDiagnostics() \r\n| extend ProtectedContainerName = columnifexists(\"ProtectedContainerName_s\", \"\"), BackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s1\", \"\")),\r\n(BackupItemAssociationWithProtectedContainerUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| extend ContainerNameWithBackupItemName = strcat(ProtectedContainerName, \"/\", BackupItemName)\r\n| where ContainerNameWithBackupItemName == (@\"{SelectedContainerNameWithBackupItemName}\") or '*' in (@\"{SelectedContainerNameWithBackupItemName}\")\r\n| where BackupItemUniqueId != \"\"\r\n| distinct BackupItemUniqueId, ContainerNameWithBackupItemName, BackupItemName, ProtectedContainerUniqueId, ProtectedContainerName, BackupManagementServerUniqueId, BMSTypeWithBackupItemType\r\n};\r\nlet LatestBackupItemInfoTable = (){\r\nLatestBackupItemWithProtectedContainerTable  | distinct BackupItemUniqueId, ContainerNameWithBackupItemName,  BackupItemName, BMSTypeWithBackupItemType\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\n CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId\r\n| join kind= rightouter (LatestBackupItemInfoTable) on BackupItemUniqueId == BackupItemUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnProtectedContainer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by ProtectedContainerUniqueId, JobUniqueId\r\n| join kind= inner (TotalProtectedContainerTable) on ProtectedContainerUniqueId == ProtectedContainerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, ProtectedContainerUniqueId \r\n};\r\nlet LatestJobTableBasedOnBackupManagementServer = (){\r\nCombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"),\r\nBackupManagementServerUniqueId = columnifexists(\"BackupManagementServerUniqueId_s\", \"\"), DataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where JobOperation in ({JobOperation}) or '*' in ({JobOperation})\r\n| where JobStatus in ({JobStatus}) or '*' in ({JobStatus})\r\n| where JobFailureCode in ({JobFailureCode}) or '*' in ({JobFailureCode})\r\n| where BackupItemUniqueId == \"\" and ProtectedContainerUniqueId == \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupManagementServerUniqueId, JobUniqueId\r\n| join kind= inner (TotalBackupManagementServerTable) on BackupManagementServerUniqueId == BackupManagementServerUniqueId\r\n| project JobStatus, JobUniqueId, JobOperation, JobFailureCode, BackupItemName, BMSTypeWithBackupItemType, DataTransferredInMB, JobDurationInSec, ContainerNameWithBackupItemName, BackupManagementServerUniqueId \r\n};\r\nlet LatestJobTable =  union  \r\n(LatestJobTableBasedOnBackupItem()),\r\n(LatestJobTableBasedOnProtectedContainer()),\r\n(LatestJobTableBasedOnBackupManagementServer())\r\n// To Exclude NaN from Search filter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| where ContainerNameWithBackupItemName == (@\"{SelectedContainerNameWithBackupItemName}\") or '*' in (@\"{SelectedContainerNameWithBackupItemName}\")\r\n| where JobUniqueId != \"\" or ContainerNameWithBackupItemName != \"\"; \r\nLatestJobTable\r\n| where JobStatus == \"Failed\"\r\n| summarize count(JobOperation) by JobFailureCode",
                "size": 0,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "title": "Failed Jobs by Failure Code",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "piechart"
            },
            "customWidth": "33",
            "showPin": true,
            "name": "query - 9"
        }
    ],
    "styleSettings": {},
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}