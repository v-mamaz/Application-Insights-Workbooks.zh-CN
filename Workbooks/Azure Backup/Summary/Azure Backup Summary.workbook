{
    "version": "Notebook/1.0",
    "items": [
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:left;float:left;\"><span data-ttu-id=\"d5318-101\"><span style=\"font-size:16px;font-weight:600\">选择 Log Analytics 工作区 </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-101\"><span style=\"font-size:16px;font-weight:600\">Select Log Analytics Workspace </span> </span></span><br> <span data-ttu-id=\"d5318-102\"><span style=\"font-size:12px;\"><a href=\"#\">如何配置备份报表的保管库诊断设置 </a> </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-102\"><span style=\"font-size:12px;\"> <a href=\"#\"> How to configure vault diagnostic settings for backup reports </a> </span> </span></span></div> <div style=\"text-align:right; float:right\"> <span data-ttu-id=\"d5318-103\"><span style=\"font-size:12px;\"><a href=\"#\">Power BI 报表发生了什么？</a> </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-103\"><span style=\"font-size:12px;\"> <a href=\"#\"> What happened to the Power BI reports? </a> </span> </span></span></div>"
            },
            "name": "text - 11"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Subscriptions}"
                ],
                "parameters": [
                    {
                        "id": "d1f42f81-eb8f-4653-a0ff-38564d7487b4",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscriptions",
                        "type": 6,
                        "description": "<span data-ttu-id=\"d5318-104\">用于筛选工作区列表的订阅</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-104\">Subscriptions to filter the list of workspaces</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "includeAll": false,
                            "selectAllValue": ""
                        }
                    },
                    {
                        "id": "2373a24f-ad32-4909-a7f6-59b373dcde6c",
                        "version": "KqlParameterItem/1.0",
                        "name": "Workspaces",
                        "type": 5,
                        "description": "<span data-ttu-id=\"d5318-105\">在保管库诊断设置中配置的 LA 工作区</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-105\">LA Workspaces configured in vault diagnostic settings</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where type =~ 'microsoft.operationalinsights/workspaces' | project id",
                        "crossComponentResources": [
                            "{Subscriptions}"
                        ],
                        "value": [],
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "customWidth": "50",
            "name": "parameters - 1"
        },
        {
            "type": 1,
            "content": {
                "json": "_____"
            },
            "name": "text - 9"
        },
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:left;float:left;\"><span data-ttu-id=\"d5318-106\"><span style=\"font-size:16px;font-weight:600\">报表筛选器 </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-106\"><span style=\"font-size:16px;font-weight:600\">Report Filters </span> </span></span></div> <div style=\"text-align:right; float:right\"> <span data-ttu-id=\"d5318-107\"><span style=\"font-size:12px;\"><a href=\"#\">如何使用备份报表？</a></span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-107\"><span style=\"font-size:12px;\"> <a href=\"#\"> How to use backup reports? </a> </span> </span></span></div>"
            },
            "name": "text - 12"
        },
        {
            "type": 1,
            "content": {
                "json": "<p> <span data-ttu-id=\"d5318-108\">💡 <span style=\"font-size:12px; font-style:italic\"> 筛选器在每个页面从左向右、从上向下应用。</span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-108\">💡 <span style=\"font-size:12px; font-style:italic\"> Filters are applied left to right and top to bottom on each page. </span> </span></span></p>"
            },
            "name": "text - 13"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "parameters": [
                    {
                        "id": "8c4ae44c-fa9a-4498-aedc-736a56e64b43",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "label": "Time Range",
                        "type": 4,
                        "description": "<span data-ttu-id=\"d5318-109\">时间范围</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-109\">Time Range</span></span>",
                        "value": {
                            "durationMs": 604800000
                        },
                        "typeSettings": {
                            "selectableValues": [
                                {
                                    "durationMs": 259200000
                                },
                                {
                                    "durationMs": 604800000
                                },
                                {
                                    "durationMs": 1209600000
                                },
                                {
                                    "durationMs": 2419200000
                                },
                                {
                                    "durationMs": 2592000000
                                },
                                {
                                    "durationMs": 5184000000
                                },
                                {
                                    "durationMs": 7776000000
                                }
                            ],
                            "allowCustom": true
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    },
                    {
                        "id": "4756b65c-80b2-4477-9bec-626cc713dfd7",
                        "version": "KqlParameterItem/1.0",
                        "name": "BMSTypeWithBackupItemType",
                        "label": "BackupItem Type",
                        "type": 2,
                        "description": "<span data-ttu-id=\"d5318-110\">BackupItem 的类型</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-110\">Type of BackupItem</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Time variable used\r\nlet Today = startofday(now());\r\n// Fetch data from AzureDiagnostics\r\nlet BackupItemUnderAzureDiagnostics = ( ) \r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend  BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\") \r\n};\r\n// Fetch data from ResourceSpecific\r\nlet BackupItemUnderResourceSpecific = ( ) \r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n};\r\nCombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct BackupManagementType, BackupItemType\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType) \r\n| distinct BMSTypeWithBackupItemType",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*",
                            "showDefault": false
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "2a83acc5-2123-476f-8a4c-da2fddf231a1",
                        "version": "KqlParameterItem/1.0",
                        "name": "Location",
                        "label": "Vault Location",
                        "type": 2,
                        "description": "<span data-ttu-id=\"d5318-111\">保管库的创建位置</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-111\">Location in which the vault was created</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| distinct ResourceId, AzureDataCenter, VaultName\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| distinct ResourceId, AzureDataCenter, VaultName;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| project BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), ResourceId\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct AzureDataCenter};\r\nLatestBackupItemTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "fefd31fa-2774-43ca-8cc3-44d477c969f0",
                        "version": "KqlParameterItem/1.0",
                        "name": "Vault",
                        "label": "Vault Name",
                        "type": 2,
                        "description": "<span data-ttu-id=\"d5318-112\">保管库的名称</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-112\">Name of the vault</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "// Parameter Used -  BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet Today = startofday(now());\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId, AzureDataCenter, VaultName\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId, AzureDataCenter, VaultName;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| project BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), ResourceId\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n// Filter by Parameter\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet LatestBackupItemTable = ()\r\n{CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()),\r\n(BackupItemUnderResourceSpecific())\r\n| distinct VaultName};\r\nLatestBackupItemTable",
                        "crossComponentResources": [
                            "{Workspaces}"
                        ],
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "100",
            "name": "parameters - 7",
            "styleSettings": {
                "maxWidth": "100%"
            }
        },
        {
            "type": 1,
            "content": {
                "json": " <span data-ttu-id=\"d5318-113\">ⓘ <span style=\"font-size:12px;font-style:italic\"> 所有日期时间都处于门户时区中。报表中不显示当前未满一天的数据。</span></span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-113\">ⓘ <span style=\"font-size:12px;font-style:italic\"> All datetimes are in portal timezone. Data for the current partial day is not shown in the reports.</span></span></span></div>"
            },
            "name": "text - 14",
            "styleSettings": {
                "margin": "0% 0% 0% 0%",
                "padding": "0% 0% 0% 0%"
            }
        },
        {
            "type": 1,
            "content": {
                "json": "__________________________________________________________________________________________"
            },
            "name": "text - 12",
            "styleSettings": {
                "padding": "0px 0px 10px 0px"
            }
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "nav",
                "links": [
                    {
                        "cellValue": "parameters - 1",
                        "linkTarget": "step",
                        "linkLabel": "Summary",
                        "subTarget": "{BackupManagementType}",
                        "style": "primary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "13bf0ff5-c132-4c85-910e-9de00bb3d26e",
                            "typeSource": "workbook",
                            "gallerySource": "workbook"
                        }
                    },
                    {
                        "cellValue": "",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Protected Instances",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Protected Instances",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "BackupItems",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Storage",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Job Distribution",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Job Distribution",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Job Details",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Job Details",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alert Distribution",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Alert Distribution",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    },
                    {
                        "cellValue": "",
                        "linkTarget": "WorkbookTemplate",
                        "linkLabel": "Alert Details",
                        "style": "secondary",
                        "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/Azure Backup/Alert Details",
                            "typeSource": "default",
                            "gallerySource": "static",
                            "gallery": "Azure Monitor"
                        }
                    }
                ]
            },
            "name": "links - 8"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet RangeStartDay = startofday(now(-31d));\r\nlet Today = startofday(now());\r\nlet interval = 1d;\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = startofday(TimeGenerated)\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\n let ProtectedInstanceTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), ProtectedInstanceCount = toint(columnifexists(\"ProtectedInstanceCount_s\", \"\"))\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedInstanceTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics(isProtectedContainerBillingType) \r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(ProtectedInstanceUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet AlertUnderAzureDiagnostics = ()\r\n{\r\nlet AlertTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Alert\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend AlertUniqueIdGuid = columnifexists(\"AlertUniqueId_g\", \"\") , AlertUniqueIdStr = columnifexists(\"AlertUniqueId_s\", \"\")\r\n| extend AlertUniqueId = iff(AlertUniqueIdGuid == \"\", AlertUniqueIdStr, AlertUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by AlertUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   AlertTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet AlertUnderResourceSpecific = ()\r\n{\r\nlet AlertTable = AddonAzureBackupAlerts \r\n| where OperationName == \"Alert\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *)  by AlertUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   AlertTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = materialize(CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| project BackupItemUniqueId, BMSTypeWithBackupItemType);\r\nlet LatestBackupItemAndStorageConsumptionTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= leftouter\r\n(CombinedTable | union isfuzzy = true  \r\n(StorageAssociationUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated),\r\n(StorageAssociationUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated)\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| summarize StorageConsumedInGBs = sum(StorageConsumedInMBs)/(1024 * 1024) by BMSTypeWithBackupItemType};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\nLatestBackupItemDimensionTable\r\n| join kind= leftouter \r\n(CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestAlertTableBasedOnBackupItem = (){\r\nLatestBackupItemDimensionTable\r\n| join kind= leftouter \r\n(CombinedTable | union isfuzzy = true \r\n(AlertUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(AlertUnderResourceSpecific()\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, AlertUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestProtectedContainerUniqueIdTableBasedOnBackupItem = (){\r\nLatestBackupItemDimensionTable\r\n| join kind= leftouter \r\n(CombinedTable | union isfuzzy = true \r\n(BackupItemAssociationUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n),\r\n(BackupItemAssociationUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n| distinct ProtectedContainerUniqueId\r\n};\r\nlet LatestProtectedInstanceTableFromProtectedContainerUniqueId = ()\r\n{ \r\nLatestProtectedContainerUniqueIdTableBasedOnBackupItem\r\n| join kind= leftouter (TotalProtectedInstanceTable(true)) on ProtectedContainerUniqueId == ProtectedContainerUniqueId;\r\n};\r\nlet LatestProtectedInstanceTableFromBackupItemUniqueId = ()\r\n{ \r\nLatestBackupItemDimensionTable\r\n| join kind= leftouter (TotalProtectedInstanceTable(false)) on BackupItemUniqueId == BackupItemUniqueId;\r\n};\r\nlet LatestProtectedInstanceTable = ( ) \r\n{ union \r\n(LatestProtectedInstanceTableFromProtectedContainerUniqueId()),\r\n(LatestProtectedInstanceTableFromBackupItemUniqueId())\r\n};\r\n(LatestBackupItemDimensionTable | count | extend Dummy = 1) \r\n| join (LatestBackupItemAndStorageConsumptionTable | summarize sum(StorageConsumedInGBs) | extend Dummy = 1) on Dummy == Dummy \r\n| join (LatestJobTableBasedOnBackupItem | where JobUniqueId != \"\" | summarize dcount(JobUniqueId) | extend Dummy = 1) on Dummy == Dummy \r\n| join (LatestProtectedInstanceTable | summarize sum(ProtectedInstanceCount) | extend Dummy = 1) on Dummy == Dummy \r\n| join (LatestAlertTableBasedOnBackupItem | where AlertUniqueId != \"\" | summarize dcount(AlertUniqueId) | extend Dummy = 1) on Dummy == Dummy \r\n| extend  Key = pack_array( \"BackupItems\", \"Protected Instances\",  \"Vault Storage (GB)\", \"Jobs Created\", \"Alerts Created\"), Value = pack_array( Count, sum_ProtectedInstanceCount, sum_StorageConsumedInGBs, dcount_JobUniqueId, dcount_AlertUniqueId), \r\nSubTitle = pack_array( \"\", \"\", \"\", \"\", \"\")\r\n| project Key, Value, SubTitle \r\n| mvexpand Key, Value, SubTitle",
                "size": 4,
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "visualization": "tiles",
                "tileSettings": {
                    "titleContent": {
                        "columnMatch": "Key",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "subtitleContent": {
                        "columnMatch": "SubTitle",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 12,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "showBorder": true
                }
            },
            "showPin": true,
            "name": "query - 10"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [],
                "parameters": [
                    {
                        "id": "661ed0ad-cc20-4c62-b6c1-5668e6e2f692",
                        "version": "KqlParameterItem/1.0",
                        "name": "P1",
                        "type": 1,
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 10",
            "styleSettings": {
                "padding": "0% 0% 0% 0%"
            }
        },
        {
            "type": 1,
            "content": {
                "json": "<div style=\"text-align:left\"><span data-ttu-id=\"d5318-114\"><span style=\"font-size:14px;font-weight:600;\">按 BackupItem 类型显示的密钥参数 </span> </span><span class=\"sxs-lookup\"><span data-stu-id=\"d5318-114\"><span style=\"font-size:14px;font-weight:600;\">Key Parameters by BackupItem Type </span> </span></span></div>"
            },
            "customWidth": "100",
            "name": "text - 16",
            "styleSettings": {
                "margin": "-23px 0% 0% 0%"
            }
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "nav",
                "links": [
                    {
                        "cellValue": "{\"01) BackupItem Type\": \"Type of item being backed up, in format BackupManagement Type/BackupItem Type\", \"02) Backup Items\": \"Number of BackupItems associated with the BackupItem Type, as of the end of the selected period\", \"03) Job Success %\": \"% of jobs created in the selected period that succesfully completed. Data for log backup jobs are not shown in these reports\", \"04) Failed Jobs Trend\": \"Number of jobs that failed on each day in the selected period\", \"05) Active Alerts %\": \"% of Alerts created in the given period that are currently active\", \"06) Cloud Storage (GB)\": \"Total Cloud Storage consumed, as of the end of the selected period\", \"07) Cloud Storage Trend\":\"Amount of incremental cloud storage consumed on each day of the selected period\"}",
                        "linkTarget": "CellDetails",
                        "linkLabel": "ⓘ",
                        "style": "link",
                        "linkIsContextBlade": true
                    }
                ]
            },
            "customWidth": "0",
            "name": "links - 15"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Parameter Used - Vault, Location, BMSTypeWithBackupItemType\r\n// Time variable used\r\nlet RangeStartDay = startofday({TimeRange:start});\r\nlet Today = startofday(now());\r\nlet interval = 1d;\r\n// High-level Functions\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and SchemaVersion_s == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceId\r\n| where VaultName in  ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| where OperationName == \"Vault\" \r\n| where VaultName in ({Vault}) or '*' in ({Vault})\r\n| where AzureDataCenter in ({Location}) or '*' in ({Location})\r\n| distinct ResourceId;\r\n};\r\nlet BackupItemUnderAzureDiagnostics = ()\r\n{\r\nlet BackupItemTable = AzureDiagnostics\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItem\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemUnderResourceSpecific = ()\r\n{\r\nlet BackupItemTable = CoreAzureBackup\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| where OperationName == \"BackupItem\" and State != \"Deleted\"\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemAssociationUnderResourceSpecific = ()\r\n{\r\nlet BackupItemAssociationTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderAzureDiagnostics = ()\r\n{\r\n let BackupItemFrontEndSizeTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"BackupItemFrontEndSizeConsumption\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet BackupItemFrontEndSizeUnderResourceSpecific = ()\r\n{\r\nlet BackupItemFrontEndSizeTable = CoreAzureBackup \r\n| where OperationName == \"BackupItemFrontEndSizeConsumption\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   BackupItemFrontEndSizeTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationHistoryUnderAzureDiagnostics = ()\r\n{\r\n let StorageAssociationTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"StorageAssociation\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| extend TimeRangeEndDay = startofday(TimeGenerated) \r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet StorageAssociationHistoryUnderResourceSpecific = ()\r\n{\r\nlet StorageAssociationTable = AddonAzureBackupStorage \r\n| where OperationName == \"StorageAssociation\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| extend TimeRangeEndDay = startofday(TimeGenerated) \r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   StorageAssociationTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderAzureDiagnostics = ()\r\n{\r\nlet ProtectedContainerTable = AzureDiagnostics\r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedContainer\"  and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| extend ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\")\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedContainerUnderResourceSpecific = ()\r\n{\r\nlet ProtectedContainerTable = CoreAzureBackup\r\n| where OperationName == \"ProtectedContainer\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedContainerTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceUnderAzureDiagnostics = (isProtectedContainerBillingType:bool)\r\n{\r\n let ProtectedInstanceTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"ProtectedInstance\" and SchemaVersion_s == \"V2\" and State_s != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), ProtectedContainerUniqueId = columnifexists(\"ProtectedContainerUniqueId_s\", \"\"), ProtectedInstanceCount = toint(columnifexists(\"ProtectedInstanceCount_s\", \"\"))\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet ProtectedInstanceUnderResourceSpecific = (isProtectedContainerBillingType:bool)\r\n{\r\nlet ProtectedInstanceTable = AddonAzureBackupProtectedInstance \r\n| where OperationName == \"ProtectedInstance\" and State != \"Deleted\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n| where (BackupItemUniqueId == \"\" and isProtectedContainerBillingType) or (ProtectedContainerUniqueId == \"\" and not(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   ProtectedInstanceTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet TotalProtectedInstanceTable = (isProtectedContainerBillingType:bool) \r\n{CombinedTable | union isfuzzy = true \r\n(ProtectedInstanceUnderAzureDiagnostics(isProtectedContainerBillingType) \r\n| extend BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\")),\r\n(ProtectedInstanceUnderResourceSpecific(isProtectedContainerBillingType))\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, ProtectedContainerUniqueId, BackupManagementType\r\n};\r\nlet JobUnderAzureDiagnostics = ()\r\n{\r\nlet JobTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Job\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n// Exclude Log Jobs\r\n| extend JobOperation = columnifexists(\"JobOperation_s\", \"\") , JobOperationSubType = columnifexists(\"JobOperationSubType_s\", \"\")\r\n| where not((JobOperation == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| extend JobUniqueIdGuid = columnifexists(\"JobUniqueId_g\", \"\") , JobUniqueIdStr = columnifexists(\"JobUniqueId_s\", \"\")\r\n| extend JobUniqueId = iff(JobUniqueIdGuid == \"\", JobUniqueIdStr, JobUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet JobUnderResourceSpecific = ()\r\n{\r\nlet JobTable = AddonAzureBackupJobs \r\n| where OperationName == \"Job\" \r\n// Take records until previous day\r\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end} and TimeGenerated < Today\r\n// Exclude Log Jobs\r\n| where not((JobOperation  == \"Backup\" and JobOperationSubType == \"Log\") or (JobOperation  == \"Backup\" and JobOperationSubType == \"Recovery point_Log\"))\r\n| summarize arg_max(TimeGenerated, *)  by JobUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   JobTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet AlertUnderAzureDiagnostics = ()\r\n{\r\nlet AlertTable = AzureDiagnostics \r\n| where Category == \"AzureBackupReport\" and OperationName == \"Alert\" and SchemaVersion_s == \"V2\"\r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| extend AlertUniqueIdGuid = columnifexists(\"AlertUniqueId_g\", \"\") , AlertUniqueIdStr = columnifexists(\"AlertUniqueId_s\", \"\")\r\n| extend AlertUniqueId = iff(AlertUniqueIdGuid == \"\", AlertUniqueIdStr, AlertUniqueIdGuid)\r\n| summarize arg_max(TimeGenerated, *)  by AlertUniqueId ;\r\nVaultUnderAzureDiagnostics | join kind= inner (\r\n   AlertTable \r\n) on ResourceId == ResourceId;\r\n};\r\nlet AlertUnderResourceSpecific = ()\r\n{\r\nlet AlertTable = AddonAzureBackupAlerts \r\n| where OperationName == \"Alert\" \r\n// Take records until previous day\r\n| extend TimeRangeEndDay = TimeGenerated\r\n| where TimeRangeEndDay < Today\r\n| summarize arg_max(TimeGenerated, *)  by AlertUniqueId;\r\nVaultUnderResourceSpecific | join kind= inner (\r\n   AlertTable \r\n) on ResourceId == ResourceId;\r\n};\r\n// BusinessLogic\r\nlet LatestBackupItemDimensionTable = materialize(CombinedTable | union isfuzzy = true \r\n(BackupItemUnderAzureDiagnostics()\r\n| project BackupItemType = columnifexists(\"BackupItemType_s\", \"\"), BackupItemName = columnifexists(\"BackupItemName_s\", \"\"), BackupManagementType = columnifexists(\"BackupManagementType_s\", \"\"), \r\nBackupItemProtectionState = columnifexists(\"BackupItemProtectionState_s\",\"\"), BackupItemUniqueId, TimeGenerated),\r\n(BackupItemUnderResourceSpecific())\r\n| extend BMSTypeWithBackupItemType = strcat(BackupManagementType, \"/\", BackupItemType)\r\n| summarize arg_max(TimeGenerated, *)   by BackupItemUniqueId\r\n| where BackupItemUniqueId != \"\"\r\n| where BMSTypeWithBackupItemType in ({BMSTypeWithBackupItemType}) or '*' in ({BMSTypeWithBackupItemType})\r\n| project BackupItemUniqueId, BMSTypeWithBackupItemType);\r\nlet LatestBackupItemAndStorageConsumptionTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= leftouter\r\n(CombinedTable | union isfuzzy = true  \r\n(StorageAssociationUnderAzureDiagnostics | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated),\r\n(StorageAssociationUnderResourceSpecific | project StorageConsumedInMBs, StorageAllocatedInMBs, BackupItemUniqueId, TimeGenerated)\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n| summarize StorageConsumedInGBs = sum(StorageConsumedInMBs)/(1024 * 1024) by BMSTypeWithBackupItemType};\r\nlet LatestBackupItemAndStorageConsumptionHistoryTable = ()\r\n{\r\nLatestBackupItemDimensionTable | join kind= leftouter\r\n(CombinedTable | union isfuzzy = true  \r\n(StorageAssociationHistoryUnderAzureDiagnostics() | project StorageConsumedInMBs = todouble(columnifexists(\"StorageConsumedInMBs_s\", \"\")), \r\nStorageAllocatedInMBs = todouble(columnifexists(\"StorageAllocatedInMBs_s\", \"\")), BackupItemUniqueId, TimeGenerated, TimeRangeEndDay),\r\n(StorageAssociationHistoryUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *) by BackupItemUniqueId, TimeRangeEndDay)\r\n  on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestJobTableBasedOnBackupItem = (){\r\nLatestBackupItemDimensionTable\r\n| join kind= leftouter \r\n(CombinedTable | union isfuzzy = true \r\n(JobUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), JobStatus = columnifexists(\"JobStatus_s\", \"\"), JobFailureCode = columnifexists(\"JobFailureCode_s\", \"\"),\r\nDataTransferredInMB = todouble(columnifexists(\"DataTransferredInMB_s\", \"\")), JobDurationInSec = todouble(columnifexists(\"JobDurationInSecs_s\", \"\"))\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(JobUnderResourceSpecific()\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, JobUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet LatestAlertTableBasedOnBackupItem = (){\r\nLatestBackupItemDimensionTable\r\n| join kind= leftouter \r\n(CombinedTable | union isfuzzy = true \r\n(AlertUnderAzureDiagnostics()\r\n| extend BackupItemUniqueId = columnifexists(\"BackupItemUniqueId_s\", \"\"), AlertStatus = columnifexists(\"AlertStatus_s\", \"\")\r\n| where BackupItemUniqueId != \"\"\r\n),\r\n(AlertUnderResourceSpecific()\r\n| where BackupItemUniqueId != \"\"\r\n)\r\n| summarize arg_max(TimeGenerated, *)  by BackupItemUniqueId, AlertUniqueId) on BackupItemUniqueId == BackupItemUniqueId\r\n};\r\nlet ActiveAlertPercentageTable = ()\r\n{ \r\nLatestAlertTableBasedOnBackupItem\r\n// Calculate percentage\r\n| extend active=iff(AlertStatus == \"Active\" , 1 , 0)\r\n| extend record = iff(AlertUniqueId != \"\", 1, 0)  // to be used for total row count\r\n| summarize ActiveCount =sum(active), TotalCount=sum(record) by BMSTypeWithBackupItemType\r\n| extend ActiveAlertPercentage = (ActiveCount*100)/todouble(TotalCount)\r\n};\r\nlet JobSuccessPercentageTable = (){\r\nLatestJobTableBasedOnBackupItem\r\n// Calculate percentage\r\n| extend success=iff((JobStatus == \"Completed\" or JobStatus == \"CompletedWithWarnings\") , 1 , 0)\r\n| extend record = iff(JobUniqueId != \"\", 1, 0)  // to be used for total row count\r\n| summarize SuccessfulCount =sum(success), TotalCount=sum(record) by BMSTypeWithBackupItemType\r\n| extend JobSuccessPercentage = (SuccessfulCount*100)/todouble(TotalCount)\r\n};\r\nlet JobFailureTrendTable = () {\r\nLatestJobTableBasedOnBackupItem\r\n// Calculate Failure count\r\n| extend Failed=iff((JobStatus != \"Completed\" and JobStatus != \"CompletedWithWarnings\"), 1 , 0)\r\n| extend record = iff(JobUniqueId != \"\", 1, 0)  // to be used for total row count\r\n| make-series FailureCountSeries = sum(Failed) default=0\r\non TimeGenerated  from RangeStartDay to Today step interval by BMSTypeWithBackupItemType\r\n};\r\nlet CloudStorageTrendTable = ()\r\n{\r\nLatestBackupItemAndStorageConsumptionHistoryTable\r\n| make-series StorageConsumptionSeries = sum(StorageConsumedInMBs) default=0\r\non TimeGenerated  from RangeStartDay to Today step interval by BMSTypeWithBackupItemType\r\n};\r\nLatestBackupItemDimensionTable | summarize dcount(BackupItemUniqueId) by BMSTypeWithBackupItemType \r\n| join kind=leftouter JobSuccessPercentageTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| join kind=leftouter ActiveAlertPercentageTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| join kind=leftouter LatestBackupItemAndStorageConsumptionTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| join kind=leftouter JobFailureTrendTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| join kind=leftouter CloudStorageTrendTable on BMSTypeWithBackupItemType == BMSTypeWithBackupItemType \r\n| project-away BMSTypeWithBackupItemType1, BMSTypeWithBackupItemType2, BMSTypeWithBackupItemType3, BMSTypeWithBackupItemType4, BMSTypeWithBackupItemType5, TotalCount, TotalCount1, ActiveCount, SuccessfulCount, TimeGenerated, TimeGenerated1\r\n| order by BMSTypeWithBackupItemType asc",
                "size": 3,
                "exportFieldName": "BMSTypeWithBackupItemType",
                "exportParameterName": "BMSTypeWithBackupItemType",
                "exportDefaultValue": "*",
                "showExportToExcel": true,
                "exportToExcelOptions": "visible",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                    "{Workspaces}"
                ],
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "BMSTypeWithBackupItemType",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "dcount_BackupItemUniqueId",
                            "formatter": 1,
                            "formatOptions": {
                                "linkTarget": "WorkbookTemplate",
                                "showIcon": true,
                                "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/Azure Backup/Storage",
                                    "typeSource": "default",
                                    "gallerySource": "static",
                                    "gallery": "Azure Monitor"
                                }
                            }
                        },
                        {
                            "columnMatch": "JobSuccessPercentage",
                            "formatter": 18,
                            "formatOptions": {
                                "linkTarget": "WorkbookTemplate",
                                "showIcon": true,
                                "thresholdsOptions": "colors",
                                "thresholdsGrid": [
                                    {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": null,
                                        "text": "{0}{1}"
                                    }
                                ],
                                "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/Azure Backup/Job DistributionCommunity-Workbooks/Azure Backup/Job Distribution",
                                    "typeSource": "default",
                                    "gallerySource": "static",
                                    "gallery": "Azure Monitor"
                                }
                            },
                            "numberFormat": {
                                "unit": 1,
                                "options": {
                                    "style": "decimal",
                                    "minimumFractionDigits": 2,
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "ActiveAlertPercentage",
                            "formatter": 18,
                            "formatOptions": {
                                "linkTarget": "WorkbookTemplate",
                                "showIcon": true,
                                "thresholdsOptions": "colors",
                                "thresholdsGrid": [
                                    {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "text": "{0}{1}"
                                    }
                                ],
                                "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/Azure Backup/Alert Distribution",
                                    "typeSource": "default",
                                    "gallerySource": "static",
                                    "gallery": "Azure Monitor"
                                }
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                }
                            }
                        },
                        {
                            "columnMatch": "StorageConsumedInGBs",
                            "formatter": 1,
                            "formatOptions": {
                                "showIcon": true
                            },
                            "numberFormat": {
                                "unit": 0,
                                "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 4
                                }
                            }
                        },
                        {
                            "columnMatch": "FailureCountSeries",
                            "formatter": 10,
                            "formatOptions": {
                                "palette": "orange",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "StorageConsumptionSeries",
                            "formatter": 9,
                            "formatOptions": {
                                "palette": "orange",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TimeGenerated",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TimeGenerated1",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "sum_ProtectedInstanceCount",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "labelSettings": [
                        {
                            "columnId": "BMSTypeWithBackupItemType",
                            "label": "BackupItem Type"
                        },
                        {
                            "columnId": "dcount_BackupItemUniqueId",
                            "label": "BackupItems"
                        },
                        {
                            "columnId": "JobSuccessPercentage",
                            "label": "Job Success %"
                        },
                        {
                            "columnId": "ActiveAlertPercentage",
                            "label": "Active Alerts %"
                        },
                        {
                            "columnId": "StorageConsumedInGBs",
                            "label": "Vault Storage (GB)"
                        },
                        {
                            "columnId": "FailureCountSeries",
                            "label": "Trend of Failed Jobs"
                        },
                        {
                            "columnId": "StorageConsumptionSeries",
                            "label": "Trend of Vault Storage Consumed"
                        }
                    ]
                }
            },
            "showPin": true,
            "name": "query - 11",
            "styleSettings": {
                "margin": "-30px 0% 0% 0%",
                "showBorder": true
            }
        }
    ],
    "styleSettings": {},
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}