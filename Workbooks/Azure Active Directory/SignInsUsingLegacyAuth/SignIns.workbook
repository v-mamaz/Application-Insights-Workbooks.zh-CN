{
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json",
    "version": "Notebook/1.0",
    "isLocked": false,
    "items": [
        {
            "type": 1,
            "content": {
                "json": "# <a name=\"sign-ins-using-legacy-auth\"></a><span data-ttu-id=\"b5adc-101\">使用旧版身份验证的 SignIns</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5adc-101\">Sign-ins using Legacy Auth</span></span>"
            },
            "conditionalVisibility": null
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [],
                "parameters": [
                    {
                        "id": "13f56671-7604-4427-a4d8-663f3da0cbc5",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                            "durationMs": 2592000000,
                            "createdTime": "2018-11-13T19:33:10.167Z",
                            "isInitialTime": false,
                            "grain": 1,
                            "useDashboardTimeRange": false
                        },
                        "isHiddenWhenLocked": false,
                        "typeSettings": {
                            "selectableValues": [
                                {
                                    "durationMs": 300000,
                                    "createdTime": "2018-11-13T19:33:10.162Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 900000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 1800000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 3600000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 14400000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 43200000,
                                    "createdTime": "2018-11-13T19:33:10.164Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 86400000,
                                    "createdTime": "2018-11-13T19:33:10.165Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 172800000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 259200000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 604800000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 1209600000,
                                    "createdTime": "2018-11-13T19:33:10.166Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                },
                                {
                                    "durationMs": 2592000000,
                                    "createdTime": "2018-11-13T19:33:10.167Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                }
                            ],
                            "allowCustom": true
                        },
                        "timeContextFromParameter": null
                    },
                    {
                        "id": "3b5cc420-8ad8-4523-ba28-a54910756794",
                        "version": "KqlParameterItem/1.0",
                        "name": "Apps",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "SigninLogs\r\n| summarize by AppDisplayName\r\n| order by AppDisplayName asc\r\n| project Value = AppDisplayName, Label = AppDisplayName, Selected = false\r\n| union (datatable(Value:string, Label:string, Selected:boolean)[\r\n'*', 'All Apps', true\r\n])",
                        "isHiddenWhenLocked": false,
                        "timeContextFromParameter": null,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": [
                            "*"
                        ]
                    }
                ],
                "style": "pills",
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": null
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"legacy-auth-based-sign-ins-by-status\"></a><span data-ttu-id=\"b5adc-102\">按状态划分的基于登录的旧版身份验证</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5adc-102\">Legacy Auth based Sign-ins by Status</span></span>"
            },
            "conditionalVisibility": null,
            "customWidth": "50"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|extend errorCode = toint(Status.errorCode)\r\n|extend SigninStatus = case(errorCode == 0, \"Success\",                       errorCode == 50058, \"Interrupt\",                       errorCode == 50140, \"Interrupt\",                       errorCode == 51006, \"Interrupt\",                       errorCode == 50059, \"Interrupt\",                       errorCode == 65001, \"Interrupt\",                       errorCode == 52004, \"Interrupt\",                       errorCode == 50055, \"Interrupt\",                       errorCode == 50144, \"Interrupt\",                       errorCode == 50072, \"Interrupt\",                       errorCode == 50074, \"Interrupt\",                       errorCode == 16000, \"Interrupt\",                       errorCode == 16001, \"Interrupt\",                       errorCode == 16003, \"Interrupt\",                       errorCode == 50127, \"Interrupt\",                       errorCode == 50125, \"Interrupt\",                       errorCode == 50129, \"Interrupt\",                       errorCode == 50143, \"Interrupt\",                       errorCode == 81010, \"Interrupt\",                       errorCode == 81014, \"Interrupt\",                       errorCode == 81012 ,\"Interrupt\",                       \"Failure\") \r\n|extend Reason = tostring(Status.failureReason)\r\n|extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,\"Unknown\" ,ClientAppUsed)  \r\n|extend isLegacyAuth = case(ClientAppUsed contains \"Browser\", \"No\", ClientAppUsed contains \"Mobile Apps and Desktop clients\", \"No\", ClientAppUsed contains \"Exchange ActiveSync\", \"No\", ClientAppUsed contains \"Other clients\", \"Yes\", \"Unknown\") |where isLegacyAuth==\"Yes\"\r\n| make-series ['Sign-ins'] = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by SigninStatus, ClientAppUsed \r\n",
                "showQuery": false,
                "size": 3,
                "aggregation": 0,
                "showAnnotations": false,
                "showAnalytics": false,
                "color": "greenDark",
                "timeContext": {
                    "durationMs": 0,
                    "endTime": null,
                    "createdTime": "2019-02-10T17:46:17.127Z",
                    "isInitialTime": false,
                    "grain": 1,
                    "useDashboardTimeRange": false
                },
                "timeContextFromParameter": "TimeRange",
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "categoricalbar"
            },
            "conditionalVisibility": null
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"sign-ins-by-legacy-auth-protocols\"></a><span data-ttu-id=\"b5adc-103\">按旧版身份验证协议划分的登录</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5adc-103\">Sign-ins by Legacy Auth Protocols</span></span>"
            },
            "conditionalVisibility": null,
            "customWidth": "50"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"legacy-auth-status\"></a><span data-ttu-id=\"b5adc-104\">旧版身份验证状态</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5adc-104\">Legacy Auth Status</span></span>"
            },
            "conditionalVisibility": null,
            "customWidth": "50"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs |extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,\"Unknown\" ,ClientAppUsed)  |extend isLegacyAuth = case(ClientAppUsed contains \"Browser\", \"No\", ClientAppUsed contains \"Mobile Apps and Desktop clients\", \"No\", ClientAppUsed contains \"Exchange ActiveSync\", \"No\", ClientAppUsed contains \"Other clients\", \"Yes\", \"Unknown\") |where isLegacyAuth==\"Yes\"\r\n|summarize count() by ClientAppUsed",
                "showQuery": false,
                "size": 0,
                "aggregation": 0,
                "showAnnotations": false,
                "showAnalytics": false,
                "color": "greenDark",
                "timeContext": {
                    "durationMs": 0,
                    "endTime": null,
                    "createdTime": "2019-02-10T17:46:17.157Z",
                    "isInitialTime": false,
                    "grain": 1,
                    "useDashboardTimeRange": false
                },
                "timeContextFromParameter": "TimeRange",
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "categoricalbar"
            },
            "conditionalVisibility": null,
            "customWidth": "50"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|extend errorCode = toint(Status.errorCode)\r\n|extend SigninStatus = case(errorCode == 0, \"Success\",                       errorCode == 50058, \"Interrupt\",                       errorCode == 50140, \"Interrupt\",                       errorCode == 51006, \"Interrupt\",                       errorCode == 50059, \"Interrupt\",                       errorCode == 65001, \"Interrupt\",                       errorCode == 52004, \"Interrupt\",                       errorCode == 50055, \"Interrupt\",                       errorCode == 50144, \"Interrupt\",                       errorCode == 50072, \"Interrupt\",                       errorCode == 50074, \"Interrupt\",                       errorCode == 16000, \"Interrupt\",                       errorCode == 16001, \"Interrupt\",                       errorCode == 16003, \"Interrupt\",                       errorCode == 50127, \"Interrupt\",                       errorCode == 50125, \"Interrupt\",                       errorCode == 50129, \"Interrupt\",                       errorCode == 50143, \"Interrupt\",                       errorCode == 81010, \"Interrupt\",                       errorCode == 81014, \"Interrupt\",                       errorCode == 81012 ,\"Interrupt\",                       \"Failure\") \r\n|extend Reason = tostring(Status.failureReason)\r\n|extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,\"Unknown\" ,ClientAppUsed)  \r\n|extend isLegacyAuth = case(ClientAppUsed contains \"Browser\", \"No\", ClientAppUsed contains \"Mobile Apps and Desktop clients\", \"No\", ClientAppUsed contains \"Exchange ActiveSync\", \"No\", ClientAppUsed contains \"Other clients\", \"Yes\", \"Unknown\") \r\n| where isLegacyAuth==\"Yes\"\r\n|summarize count() by SigninStatus \r\n",
                "showQuery": false,
                "size": 0,
                "aggregation": 0,
                "showAnnotations": false,
                "showAnalytics": false,
                "color": "greenDark",
                "timeContextFromParameter": null,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart"
            },
            "conditionalVisibility": null,
            "customWidth": "50"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"legacy-auth-sign-ins-by-users\"></a><span data-ttu-id=\"b5adc-105\">按状态划分的旧版身份验证登录</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5adc-105\">Legacy Auth Sign-ins by Users</span></span>"
            },
            "conditionalVisibility": null
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let data = SigninLogs\r\n|extend errorCode = toint(Status.errorCode)\r\n|extend SigninStatus = case(errorCode == 0, \"Success\",                       errorCode == 50058, \"Interrupt\",                       errorCode == 50140, \"Interrupt\",                       errorCode == 51006, \"Interrupt\",                       errorCode == 50059, \"Interrupt\",                       errorCode == 65001, \"Interrupt\",                       errorCode == 52004, \"Interrupt\",                       errorCode == 50055, \"Interrupt\",                       errorCode == 50144, \"Interrupt\",                       errorCode == 50072, \"Interrupt\",                       errorCode == 50074, \"Interrupt\",                       errorCode == 16000, \"Interrupt\",                       errorCode == 16001, \"Interrupt\",                       errorCode == 16003, \"Interrupt\",                       errorCode == 50127, \"Interrupt\",                       errorCode == 50125, \"Interrupt\",                       errorCode == 50129, \"Interrupt\",                       errorCode == 50143, \"Interrupt\",                       errorCode == 81010, \"Interrupt\",                       errorCode == 81014, \"Interrupt\",                       errorCode == 81012 ,\"Interrupt\",                       \"Failure\") \r\n|extend Reason = tostring(Status.failureReason)\r\n|extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,\"Unknown\" ,ClientAppUsed)  \r\n|extend isLegacyAuth = case(ClientAppUsed contains \"Browser\", \"No\", ClientAppUsed contains \"Mobile Apps and Desktop clients\", \"No\", ClientAppUsed contains \"Exchange ActiveSync\", \"No\", ClientAppUsed contains \"Other clients\", \"Yes\", \"Unknown\") |where isLegacyAuth==\"Yes\"\r\n| where UserDisplayName in ('*') or '*' in ('*');\r\nlet caData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), UserInterruptedCount = countif(SigninStatus == \"Interrupted\") by UserDisplayName\r\n| join kind=inner\r\n(\r\n    data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range(datetime(\"2019-01-02T16:16:00.710Z\"), datetime(\"2019-02-01T16:16:00.710Z\"), 1d) by  UserDisplayName\r\n    | project-away TimeGenerated\r\n)\r\non UserDisplayName\r\n| project UserDisplayName, TotalCount, SuccessCount,FailureCount,UserInterruptedCount,  Trend\r\n| order by TotalCount desc, UserDisplayName asc\r\n| serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), UserInterruptedCount = countif(SigninStatus == \"Interrupted\") by UserDisplayName, ClientAppUsed\r\n| join kind=inner\r\n(\r\n    data    \r\n    | make-series Trend = count() default = 0 on TimeGenerated in range(datetime(\"2019-01-02T16:16:00.710Z\"), datetime(\"2019-02-01T16:16:00.710Z\"), 1d) by UserDisplayName, ClientAppUsed\r\n    | project-away TimeGenerated\r\n)\r\non UserDisplayName, ClientAppUsed\r\n| order by TotalCount desc, UserDisplayName asc\r\n| project UserDisplayName, ClientAppUsed,TotalCount, SuccessCount,FailureCount,UserInterruptedCount,  Trend\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner\r\n(\r\n    caData\r\n)\r\non UserDisplayName\r\n| project Id, Name = ClientAppUsed , Type = '🖧  Protocol', ['Sign-in Count'] = TotalCount, ['Success Count'] = SuccessCount, ['Failure Count'] = FailureCount, ['User Interrupted Count'] = UserInterruptedCount, Trend, ParentId = Id1\r\n| union (caData\r\n| project Id, Name = UserDisplayName, Type = '👤 User', ['Sign-in Count'] = TotalCount, ['Success Count'] = SuccessCount, ['Failure Count'] = FailureCount, ['User Interrupted Count'] = UserInterruptedCount, Trend, ParentId = -1)\r\n| order by ['Sign-in Count'] desc, Name asc",
                "showQuery": false,
                "size": 3,
                "aggregation": 0,
                "showAnnotations": false,
                "showAnalytics": true,
                "timeContext": {
                    "durationMs": 0,
                    "endTime": null,
                    "createdTime": "2019-02-10T17:46:17.231Z",
                    "isInitialTime": false,
                    "grain": 1,
                    "useDashboardTimeRange": false
                },
                "timeContextFromParameter": "TimeRange",
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Id",
                            "formatter": 5,
                            "formatOptions": {}
                        },
                        {
                            "columnMatch": "Success Count",
                            "formatter": 4,
                            "formatOptions": {
                                "palette": "greenDark"
                            }
                        },
                        {
                            "columnMatch": "Failure Count",
                            "formatter": 4,
                            "formatOptions": {
                                "palette": "red"
                            }
                        },
                        {
                            "columnMatch": "User Interrupted Count",
                            "formatter": 4,
                            "formatOptions": {
                                "palette": "orange"
                            }
                        },
                        {
                            "columnMatch": "Trend",
                            "formatter": 10,
                            "formatOptions": {
                                "palette": "categorical"
                            }
                        },
                        {
                            "columnMatch": "ParentId",
                            "formatter": 5,
                            "formatOptions": {}
                        }
                    ],
                    "filter": true,
                    "hierarchySettings": {
                        "idColumn": "Id",
                        "parentColumn": "ParentId",
                        "treeType": 0,
                        "expanderColumn": "Name",
                        "expandTopLevel": true
                    }
                }
            },
            "conditionalVisibility": null
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"legacy-auth-sign-ins-by-apps\"></a><span data-ttu-id=\"b5adc-106\">按应用划分的旧版身份验证登录</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5adc-106\">Legacy Auth Sign-ins by Apps</span></span>"
            },
            "conditionalVisibility": null,
            "customWidth": "50"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let data = SigninLogs\r\n|extend errorCode = toint(Status.errorCode)\r\n|extend SigninStatus = case(errorCode == 0, \"Success\",                       errorCode == 50058, \"Interrupt\",                       errorCode == 50140, \"Interrupt\",                       errorCode == 51006, \"Interrupt\",                       errorCode == 50059, \"Interrupt\",                       errorCode == 65001, \"Interrupt\",                       errorCode == 52004, \"Interrupt\",                       errorCode == 50055, \"Interrupt\",                       errorCode == 50144, \"Interrupt\",                       errorCode == 50072, \"Interrupt\",                       errorCode == 50074, \"Interrupt\",                       errorCode == 16000, \"Interrupt\",                       errorCode == 16001, \"Interrupt\",                       errorCode == 16003, \"Interrupt\",                       errorCode == 50127, \"Interrupt\",                       errorCode == 50125, \"Interrupt\",                       errorCode == 50129, \"Interrupt\",                       errorCode == 50143, \"Interrupt\",                       errorCode == 81010, \"Interrupt\",                       errorCode == 81014, \"Interrupt\",                       errorCode == 81012 ,\"Interrupt\",                       \"Failure\") \r\n|extend Reason = tostring(Status.failureReason)\r\n|extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,\"Unknown\" ,ClientAppUsed)  \r\n|extend isLegacyAuth = case(ClientAppUsed contains \"Browser\", \"No\", ClientAppUsed contains \"Mobile Apps and Desktop clients\", \"No\", ClientAppUsed contains \"Exchange ActiveSync\", \"No\", ClientAppUsed contains \"Other clients\", \"Yes\", \"Unknown\") |where isLegacyAuth==\"Yes\"\r\n| where AppDisplayName in ('*') or '*' in ('*');\r\nlet caData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), UserInterruptedCount = countif(SigninStatus == \"Interrupted\") by AppDisplayName\r\n| join kind=inner\r\n(\r\n    data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range(datetime(\"2019-01-02T16:16:00.710Z\"), datetime(\"2019-02-01T16:16:00.710Z\"), 1d) by  AppDisplayName\r\n    | project-away TimeGenerated\r\n)\r\non AppDisplayName\r\n| project AppDisplayName, TotalCount, SuccessCount,FailureCount,UserInterruptedCount,  Trend\r\n| order by TotalCount desc, AppDisplayName asc\r\n| serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), UserInterruptedCount = countif(SigninStatus == \"Interrupted\") by AppDisplayName, ClientAppUsed\r\n| join kind=inner\r\n(\r\n    data    \r\n    | make-series Trend = count() default = 0 on TimeGenerated in range(datetime(\"2019-01-02T16:16:00.710Z\"), datetime(\"2019-02-01T16:16:00.710Z\"), 1d) by AppDisplayName, ClientAppUsed\r\n    | project-away TimeGenerated\r\n)\r\non AppDisplayName, ClientAppUsed\r\n| order by TotalCount desc, AppDisplayName asc\r\n| project AppDisplayName, ClientAppUsed,TotalCount, SuccessCount,FailureCount,UserInterruptedCount,  Trend\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner\r\n(\r\n    caData\r\n)\r\non AppDisplayName\r\n| project Id, Name = ClientAppUsed , Type = '🖧  Protocol', ['Sign-in Count'] = TotalCount, ['Success Count'] = SuccessCount, ['Failure Count'] = FailureCount, ['User Interrupted Count'] = UserInterruptedCount, Trend, ParentId = Id1\r\n| union (caData\r\n| project Id, Name = AppDisplayName, Type = '⚙ Apps', ['Sign-in Count'] = TotalCount, ['Success Count'] = SuccessCount, ['Failure Count'] = FailureCount, ['User Interrupted Count'] = UserInterruptedCount, Trend, ParentId = -1)\r\n| order by ['Sign-in Count'] desc, Name asc",
                "showQuery": false,
                "size": 3,
                "aggregation": 0,
                "showAnnotations": false,
                "showAnalytics": true,
                "timeContext": {
                    "durationMs": 0,
                    "endTime": null,
                    "createdTime": "2019-02-10T17:46:17.277Z",
                    "isInitialTime": false,
                    "grain": 1,
                    "useDashboardTimeRange": false
                },
                "timeContextFromParameter": "TimeRange",
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Id",
                            "formatter": 5,
                            "formatOptions": {}
                        },
                        {
                            "columnMatch": "Count",
                            "formatter": 8,
                            "formatOptions": {
                                "min": 0,
                                "palette": "greenDark"
                            }
                        },
                        {
                            "columnMatch": "Trend",
                            "formatter": 10,
                            "formatOptions": {
                                "min": 0,
                                "palette": "coldHot"
                            }
                        },
                        {
                            "columnMatch": "ParentId",
                            "formatter": 5,
                            "formatOptions": {}
                        }
                    ],
                    "rowLimit": 100,
                    "filter": true,
                    "hierarchySettings": {
                        "idColumn": "Id",
                        "parentColumn": "ParentId",
                        "treeType": 0,
                        "expanderColumn": "Name",
                        "expandTopLevel": true
                    }
                }
            },
            "conditionalVisibility": null
        }
    ]
}