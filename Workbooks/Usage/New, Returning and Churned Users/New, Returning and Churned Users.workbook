{
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json",
    "version": "Notebook/1.0",
    "items": [
        {
            "type": 1,
            "content": {
                "json": "# <a name=\"new-returning-and-churned-users\"></a><span data-ttu-id=\"b5a8c-101\">新用户、老用户和流失的用户</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-101\">New, Returning and Churned Users</span></span>\n\n<span data-ttu-id=\"b5a8c-102\">你的应用如何让用户回访？</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-102\">How well does your app keep users coming back?</span></span> <span data-ttu-id=\"b5a8c-103\">了解应用的流失（人们使用应用，但随后又不回来）是增加应用使用的关键。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-103\">Understanding your app's churn -- when people use your app, but then don't come back -- is key to growing usage of your app.</span></span> <span data-ttu-id=\"b5a8c-104\">此工作簿分析：</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-104\">This workbook analyzes:</span></span>\n- <span data-ttu-id=\"b5a8c-105\">应用的有效使用情况</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-105\">Active usage of your app</span></span>\n- <span data-ttu-id=\"b5a8c-106\">自上一个时间段起流失的用户数</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-106\">How many users churned since the previous period</span></span>\n- <span data-ttu-id=\"b5a8c-107\">保留更多这些用户所带来的增长机会。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-107\">The growth opportunity presented by retaining more of these users.</span></span>"
            }
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [],
                "parameters": [
                    {
                        "id": "b3d5a360-d38d-458e-bb47-832d9f5be0e7",
                        "version": "KqlParameterItem/1.0",
                        "name": "Metric",
                        "type": 2,
                        "description": "<span data-ttu-id=\"b5a8c-108\">定义一个月内的天数。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-108\">Defines the number of days in a month.</span></span> <span data-ttu-id=\"b5a8c-109\">使用 30 天表示传统的一个月。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-109\">Use 30d for a more traditional representation of a month.</span></span> <span data-ttu-id=\"b5a8c-110\">使用 28 天防止因周末而导致每周上升/下降。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-110\">Use 28d to prevent weekly ups/downs due to weekends.</span></span>",
                        "isRequired": true,
                        "multiSelect": null,
                        "query": "datatable(key: string, display: string)[\r\n'1d', 'Daily Active Users',\r\n'7d', 'Weekly Active Users',\r\n'28d', 'Monthly Active Users (28d)',\r\n'30d', 'Monthly Active Users (30d)',\r\n]",
                        "value": "28d"
                    },
                    {
                        "id": "a909d4b8-0e7f-4234-b716-8ffb02c480cc",
                        "version": "KqlParameterItem/1.0",
                        "name": "Activities",
                        "type": 2,
                        "description": "<span data-ttu-id=\"b5a8c-111\">以逗号分隔的活动列表（例如 “EventA”，“EventB”，“PageViewC”）。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-111\">A comma seperated list of activities to count (e.g. 'EventA', 'EventB', 'PageViewC').</span></span> <span data-ttu-id=\"b5a8c-112\">如果要包含所有事件和页面视图，请使用“\\*”。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-112\">Use '\\*' if you want to include all events and page views.</span></span>",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "union customEvents, pageViews\n| where timestamp >= ago(7d)\n| summarize count() by name\n| order by count_ desc\n| project Id=name, Title=name, Selected=false\n| union (\ndatatable(Id:string, Title:string, Selected:boolean)[\n'*', 'All Events and Page Views', true\n]\n)"
                    },
                    {
                        "name": "OtherFilters",
                        "description": "<span data-ttu-id=\"b5a8c-113\">其他可用筛选器</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-113\">Other filters to use</span></span>",
                        "id": "f5554bff-7f79-444a-8073-5f9592474a0c",
                        "type": 1
                    },
                    {
                        "id": "e047acc1-8ea3-49da-afe8-d6bf36afc61e",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 2,
                        "description": "<span data-ttu-id=\"b5a8c-114\">分析的时间范围</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-114\">Time range for analysis</span></span>",
                        "isRequired": true,
                        "multiSelect": null,
                        "query": "datatable(key:string, display:string) \r\n[ \r\n\"7d\", \"Last 7 days\", \r\n\"14d\", \"Last 14 days\", \r\n\"30d\", \"Last 30 days\", \r\n\"60d\", \"Last 60 days\", \r\n\"90d\", \"Last 90 days\"\r\n] ",
                        "value": "30d"
                    }
                ]
            }
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"active-users\"></a><span data-ttu-id=\"b5a8c-115\">活动用户</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-115\">Active Users</span></span>"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let timeRange = {TimeRange};\nlet monthDefinition = {Metric};\nlet hlls = union customEvents, pageViews\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\n| where name in ({Activities}) or '*' in ({Activities})\n{OtherFilters}\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\n| project DaysToMerge = timestamp, Hlls;\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to timeRange step 1d\n| extend Day = startofday(now() - d)\n| extend R = range(0d, monthDefinition - 1d, 1d)\n| mvexpand R\n| extend ThisMonth = Day - totimespan(R)\n| extend LastMonth = Day - monthDefinition - totimespan(R)\n| project Day, ThisMonth, LastMonth);\nchurnSeriesWithHllsToInclude\n| extend DaysToMerge = ThisMonth\n| join kind= inner (hlls) on DaysToMerge \n| project Day, ThisMonthHlls = Hlls\n| union (\nchurnSeriesWithHllsToInclude\n| extend DaysToMerge = LastMonth\n| join kind= inner (hlls) on DaysToMerge\n| project Day, LastMonthHlls = Hlls)\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\n| evaluate dcount_intersect(ThisMonth, LastMonth)\n| extend NewUsers = s0 - s1\n| extend ChurnedUsers = -1 * (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\n| project Day, [\"Active Users\"] = s1 + NewUsers, [\"Returning Users\"] = s1, [\"Lost Users\"] = ChurnedUsers, [\"New Users\"] = NewUsers\n",
                "showQuery": false,
                "size": 0,
                "aggregation": 5,
                "showAnnotations": false,
                "visualization": "timechart"
            }
        },
        {
            "type": 1,
            "content": {
                "json": "<span data-ttu-id=\"b5a8c-116\">| 指标 | 定义 | | ----- |: ----- |: ----- | | 活跃用户 | 计算此期间至少有多少人使用过应用。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-116\">| Metric | Definition | | ----- |: ----- |: ----- | | Active users | Count of how many people used your app at least once this period.</span></span> <span data-ttu-id=\"b5a8c-117\">活跃用户 = 回访用户 + 新用户。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-117\">Active Users = Returning users + New users.</span></span> <span data-ttu-id=\"b5a8c-118\">| | 回访用户 | 计算在此期间和上一期间至少使用过应用的人数。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-118\">| | Returning users | Count of how many people used your app at least once this period and the previous period.</span></span> <span data-ttu-id=\"b5a8c-119\">| | 新用户 | 计算在过去一段时间内至少有一次使用应用的人数，但在上一期间没有使用它。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-119\">| | New users | Count of how many people used your app at least once in the last period, but did not use it the previous period.</span></span> <span data-ttu-id=\"b5a8c-120\">| | 流失用户 | 计算上一期间使用应用的人数，但不包括此期间。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-120\">| | Lost users | Count of how many people used your app the previous period but not this period.</span></span> |"
            }
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"usage-growth\"></a><span data-ttu-id=\"b5a8c-121\">使用率增长</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-121\">Usage Growth</span></span>\n<span data-ttu-id=\"b5a8c-122\">此图表显示了应用的 {Period} 增长率的变化趋势。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-122\">This chart shows you the trend of the {Period} growth rates of your app.</span></span> <span data-ttu-id=\"b5a8c-123\">这样可以分析新的、回访的、丢失的和整体用户增长率随时间的变化情况 - 例如，看看增长是在加速，减速还是保持稳定。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-123\">This allows you to analyze how your New, Returning, Lost and Overall users growth rates change over time -- for instance see if growth is accelerating, decelerating or holding steady.</span></span> \n\n<span data-ttu-id=\"b5a8c-124\">底部的指标显示当前的增长率。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-124\">The metrics at the bottow show the current growth rate.</span></span> <span data-ttu-id=\"b5a8c-125\">`Active Users` 系列显示了整体使用增长率。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-125\">The `Active Users` series shows the overall usage growth rate.</span></span>"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let timeRange = {TimeRange};\nlet monthDefinition = {Metric};\nlet hlls = union customEvents, pageViews\n| where timestamp >= startofmonth(now() - 2 * timeRange - 2 * monthDefinition)\n| where name in ({Activities}) or '*' in ({Activities})\n{OtherFilters}\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\n| project DaysToMerge = timestamp, Hlls;\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to 2 * timeRange step 1d\n| extend Day = startofday(now() - d)\n| extend R = range(0d, monthDefinition - 1d, 1d)\n| mvexpand R\n| extend ThisMonth = Day - totimespan(R)\n| extend LastMonth = Day - monthDefinition - totimespan(R)\n| project Day, ThisMonth, LastMonth);\nlet activeUsers = churnSeriesWithHllsToInclude\n| extend DaysToMerge = ThisMonth\n| join kind= inner (hlls) on DaysToMerge \n| project Day, ThisMonthHlls = Hlls\n| union (\nchurnSeriesWithHllsToInclude\n| extend DaysToMerge = LastMonth\n| join kind= inner (hlls) on DaysToMerge\n| project Day, LastMonthHlls = Hlls)\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\n| evaluate dcount_intersect(ThisMonth, LastMonth)\n| extend NewUsers = s0 - s1\n| extend ChurnedUsers = -1 * (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\n| project Day, ActiveUsers = s1 + NewUsers, ReturningUsers = s1, ChurnedUsers, NewUsers;\nactiveUsers\n| extend LastPeriod = Day - monthDefinition\n| join kind=inner (activeUsers | project-rename LastPeriod = Day) on LastPeriod\n| project Day, [\"Active Users\"] = 100.0 * (ActiveUsers - ActiveUsers1) / ActiveUsers1, [\"Returning Users\"] = 100.0 * (ReturningUsers - ReturningUsers1) / ReturningUsers1, [\"Lost Users\"] = 100.0 * (ChurnedUsers - ChurnedUsers1) / ChurnedUsers1, [\"New Users\"] = 100.0 * (NewUsers - NewUsers1) / NewUsers1\n",
                "showQuery": false,
                "size": 0,
                "aggregation": 5,
                "showAnnotations": false,
                "visualization": "timechart"
            }
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"retention-rate\"></a><span data-ttu-id=\"b5a8c-126\">保留率</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-126\">Retention Rate</span></span>\n<span data-ttu-id=\"b5a8c-127\">应用的保留率，定义为回访用户占总用户的百分比。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-127\">Your app's retention rate, defined as returning users as percentage of total users.</span></span>"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {Metric};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n{OtherFilters}\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange  - 1d) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| extend NewUsers = s0 - s1\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"Retention Rate\"] = iff((s1) == 0, 0.0, 100.0 * s1 / (s1 + ChurnedUsers))\r\n",
                "showQuery": false,
                "size": 0,
                "aggregation": 5,
                "showAnnotations": false,
                "visualization": "linechart"
            }
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"ratio-of-returning-to-new-users\"></a><span data-ttu-id=\"b5a8c-128\">回访用户与新用户的比率</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-128\">Ratio of Returning to New Users</span></span>\n<span data-ttu-id=\"b5a8c-129\">此比率表示使用量来自现有用户与新用户的比例。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-129\">This ratio indicates how much of your usage comes from existing users vs. new users.</span></span> <span data-ttu-id=\"b5a8c-130\">较小的比率表示较大的流失量，使用情况主要来自新用户。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-130\">Smaller ratios indicate larger amounts of churn, with usage primarily coming from new users.</span></span>"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {Metric};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n{OtherFilters}\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange  - 1d) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| extend NewUsers = s0 - s1\r\n| extend ChurnedUsers = -1 * (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"Returning Users Ratio\"] = 1.0 * s1 / (s1 + NewUsers)",
                "showQuery": false,
                "size": 0,
                "aggregation": 5,
                "showAnnotations": false,
                "visualization": "timechart"
            }
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"growth-opportunity\"></a><span data-ttu-id=\"b5a8c-131\">增长机会</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-131\">Growth Opportunity</span></span>\n\n<span data-ttu-id=\"b5a8c-132\">你应该关注应用的流失量吗？</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-132\">Should you care about your app's churn?</span></span> <span data-ttu-id=\"b5a8c-133\">此图表显示了通过减少客户流失来增加应用使用率的潜力。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5a8c-133\">This chart shows the potential to grow your app's usage by reducing churn.</span></span>"
            }
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {Metric};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n{OtherFilters}\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange ) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| extend NewUsers = s0 - s1\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"Potential Usage (includes Lost)\"] = ChurnedUsers, [\"Current Users\"] = s1 + NewUsers\r\n",
                "showQuery": false,
                "size": 0,
                "aggregation": 5,
                "showAnnotations": false,
                "visualization": "areachart"
            }
        }
    ]
}