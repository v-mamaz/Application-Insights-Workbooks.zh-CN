{
    "version": "Notebook/1.0",
    "items": [
        {
            "type": 1,
            "content": {
                "json": "# <a name=\"conditional-access-insights\"></a>Êù°‰ª∂ËÆøÈóÆËßÅËß£\n"
            },
            "name": "text - 5"
        },
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "paragraph",
                "links": [
                    {
                        "cellValue": "https://portal.azure.com/?reportonlypolicies=true#blade/Microsoft_AAD_IAM/ConditionalAccessBlade/Policies",
                        "linkTarget": "Url",
                        "linkLabel": "visit the Conditional Access blade.",
                        "preText": "Select one or more conditional access policies to evaluate their impact. To modify or enforce a policy",
                        "postText": "",
                        "style": "link"
                    }
                ]
            },
            "name": "Unknown - 11"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [],
                "parameters": [
                    {
                        "id": "9b8cc3f0-ebab-482e-be6d-903f3e066c99",
                        "version": "KqlParameterItem/1.0",
                        "name": "Policy",
                        "label": "Conditional Access Policy",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "SigninLogs\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| top 1 by TimeGenerated\r\n| project CApolicy = parse_json(ConditionalAccessPolicies)\r\n| mv-expand CApolicy\r\n| where tostring(result=parse_json(CApolicy)[\"result\"]) in (\"success\",\"failure\",\"notApplied\",\"interrupt\")\r\n| project name = parse_json(CApolicy)[\"displayName\"]\r\n| project Value = tostring(name), Label = strcat(tostring(name), ' - (Enabled)'), selected = false, displayOrder = \"1\", group = \"Enabled policies\"\r\n| union (\r\nSigninLogs\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| top 1 by TimeGenerated\r\n| project CApolicy = parse_json(ConditionalAccessPolicies)\r\n| mv-expand CApolicy\r\n| where tostring(result=parse_json(CApolicy)[\"result\"]) !in (\"success\",\"failure\",\"notApplied\",\"interrupt\",\"notEnabled\")\r\n| project name = parse_json(CApolicy)[\"displayName\"]\r\n| project Value = tostring(name), Label = strcat(tostring(name), ' - (Report-only)'), selected = false, displayOrder = \"2\", group = \"Report-only policies\"\r\n)\r\n| sort by displayOrder asc, Label asc\r\n\r\n",
                        "value": [],
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "timeContext": {
                            "durationMs": 604800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "17196e4b-f291-46a5-9e00-0b5e0d8943e8",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                            "durationMs": 86400000
                        },
                        "typeSettings": {
                            "selectableValues": [
                                {
                                    "durationMs": 1800000
                                },
                                {
                                    "durationMs": 3600000
                                },
                                {
                                    "durationMs": 14400000
                                },
                                {
                                    "durationMs": 43200000
                                },
                                {
                                    "durationMs": 86400000
                                },
                                {
                                    "durationMs": 172800000
                                },
                                {
                                    "durationMs": 259200000
                                },
                                {
                                    "durationMs": 604800000
                                },
                                {
                                    "durationMs": 1209600000
                                },
                                {
                                    "durationMs": 2419200000
                                },
                                {
                                    "durationMs": 2592000000
                                },
                                {
                                    "durationMs": 5184000000
                                },
                                {
                                    "durationMs": 7776000000
                                }
                            ]
                        },
                        "label": "Time Range"
                    },
                    {
                        "id": "93cfc5e1-92f3-43a3-aad5-dc7fc507eb57",
                        "version": "KqlParameterItem/1.0",
                        "name": "Users",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "SigninLogs\r\n| project UserDisplayName\r\n| summarize Count = count() by UserDisplayName\r\n| order by Count desc, UserDisplayName asc\r\n| project Value = UserDisplayName, Label = strcat(UserDisplayName, ' - ', Count, ' sign-ins'), Selected = false",
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 604800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                        "id": "60a4d33d-0d73-47e8-a32d-6798d0f5730e",
                        "version": "KqlParameterItem/1.0",
                        "name": "Apps",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "SigninLogs\n| project AppDisplayName\n| summarize Count = count() by AppDisplayName\n| order by Count desc, AppDisplayName asc\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false",
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ],
                            "selectAllValue": "*"
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"impact-summary\"></a>ÂΩ±ÂìçÊëòË¶Å\n‰∏ãÈù¢ÊòØÁßüÊà∑‰∏≠ÁöÑÊâÄÈÄâÁ≠ñÁï•Âú® {TimeRange} ÊúüÈó¥ÁöÑÂΩ±Âìç„ÄÇ \n\nüí° _ÊåâÁî®Êà∑Êï∞ÊàñÁôªÂΩïÊï∞Êü•ÁúãÊëòË¶Å„ÄÇÂçïÂáªÊüê‰∏™Á£ÅË¥¥ÔºåÂú®‰∏ãÈù¢Êü•ÁúãËØ¶ÁªÜ‰ø°ÊÅØ„ÄÇ_"
            },
            "name": "text - 5"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [],
                "parameters": [
                    {
                        "id": "dd4981ac-d2a3-47c7-89ac-5517cf68e5e5",
                        "version": "KqlParameterItem/1.0",
                        "name": "unit",
                        "label": "Data view",
                        "type": 2,
                        "isRequired": true,
                        "query": "let unit = datatable(label:string,units:string)\r\n[\"users\", \"|\",\r\n \"sign-ins\",\"//\"];\r\nunit \r\n| project Value = units, Label = label",
                        "value": "|",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "50",
            "name": "parameters - 56"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "// Total\r\nSigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend statusCode = \"1\", resultName = \"Total\"\r\n{unit} summarize count() by resultName, UserDisplayName, statusCode\r\n| summarize count() by resultName, statusCode\r\n| extend unit = case(\"{unit}\" == \"//\", \"sign-ins\",\"users\")\r\n//\r\n//\r\n// Access granted, access denied, action required, not applied\r\n| union (\r\nSigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend result = tostring(CApolicy[\"result\"]), displayName = tostring(CApolicy[\"displayName\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| extend resultName = case(combinedResult == \"success\", \"Success\", combinedResult == \"failure\", \"Failure\", combinedResult == \"interrupt\", \"User action required\", combinedResult == \"notApplied\", \"Not applied\", \"Other\")\r\n| extend statusCode = case(combinedResult == \"success\", \"2\", combinedResult == \"failure\", \"3\", combinedResult == \"interrupt\", \"4\", combinedResult == \"notApplied\", \"5\", \"6\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n{unit} summarize count() by resultName, UserDisplayName, statusCode\r\n| summarize count() by resultName, statusCode\r\n| extend unit = case(\"{unit}\" == \"//\", \"sign-ins\",\"users\")\r\n)\r\n//\r\n// Case if result count is 0\r\n| join kind = fullouter (\r\n    datatable (resultName:string,statusCode1:string)\r\n    [\"Total\", \"1\",\r\n     \"Success\", \"2\",\r\n     \"Failure\", \"3\",\r\n     \"User action required\", \"4\",\r\n     \"Not applied\", \"5\",]\r\n) on resultName\r\n| extend resultName = iff(resultName == '', resultName1, resultName), count_ = iff(resultName == '', 0, count_), unit = \"{unit:label}\", statusCode1\r\n| project-away resultName1\r\n| sort by statusCode1 asc",
                "size": 3,
                "exportFieldName": "resultName",
                "exportParameterName": "resultName",
                "exportDefaultValue": "Total",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "tiles",
                "tileSettings": {
                    "titleContent": {
                        "columnMatch": "resultName",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto",
                            "showIcon": true
                        },
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    },
                    "secondaryContent": {
                        "columnMatch": "unit",
                        "formatter": 1,
                        "formatOptions": {
                            "showIcon": true
                        }
                    },
                    "showBorder": true
                }
            },
            "name": "query - 56"
        },
        {
            "type": 1,
            "content": {
                "json": "__________________________________________\n## <a name=\"breakdown-per-condition-and-sign-in-status\"></a>ÊåâÊù°‰ª∂ÂíåÁôªÂΩïÁä∂ÊÄÅËøõË°åÁªÜÂàÜ\nüí° ÂçïÂáªË¶ÅÂú®Êñ∞Á™óÂè£‰∏≠ËøêË°åÁöÑÊØè‰∏™Êü•ËØ¢ËßíËêΩ‰∏≠ÁöÑ LogAnalytics ÂõæÊ†á„ÄÇ"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "name": "text - 14"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"device-state\"></a>ËÆæÂ§áÁä∂ÊÄÅ \n{resultName} ({unit:label})"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "customWidth": "33",
            "name": "text - 13"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"device-platform\"></a>ËÆæÂ§áÂπ≥Âè∞\n{resultName} ({unit:label})"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "customWidth": "33",
            "name": "text - 15"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"client-app\"></a>ÂÆ¢Êà∑Á´ØÂ∫îÁî®\n{resultName} ({unit:label})"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "customWidth": "33",
            "name": "text - 22"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName, DeviceDetail\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend deviceState = case(DeviceDetail[\"trustType\"] == \"Hybrid Azure AD joined\", \"Hybrid Azure AD joined\", DeviceDetail[\"trustType\"] == \"Azure AD joined\", \"Azure AD joined\", DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", \"Other\"), displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber, deviceState\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n{unit} summarize count() by UserDisplayName, deviceState\r\n| summarize count() by deviceState",
                "size": 1,
                "showAnalytics": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                        "columnMatch": "deviceState",
                        "formatter": 1
                    },
                    "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto"
                        },
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                }
            },
            "customWidth": "33",
            "name": "success users device state"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName, DeviceDetail\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| where parse_json(DeviceDetail)[\"operatingSystem\"] != \"\"\r\n| extend device = tostring(DeviceDetail[\"operatingSystem\"])\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber, device\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n{unit} summarize count() by UserDisplayName, device\r\n| summarize count() by device\r\n",
                "size": 1,
                "showAnalytics": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                        "columnMatch": "deviceState",
                        "formatter": 1
                    },
                    "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto"
                        },
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                }
            },
            "customWidth": "33",
            "name": "success users device state - Copy"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName, ClientAppUsed\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n{unit} summarize count() by UserDisplayName, ClientAppUsed\r\n| summarize count() by ClientAppUsed\r\n",
                "size": 1,
                "showAnalytics": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                        "columnMatch": "deviceState",
                        "formatter": 1
                    },
                    "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto"
                        },
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                }
            },
            "customWidth": "33",
            "name": "success users device state - Copy - Copy"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"sign-in-risk\"></a>ÁôªÂΩïÈ£éÈô©\n{resultName} ({unit:label})"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "customWidth": "33",
            "name": "text - 23"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"location\"></a>‰ΩçÁΩÆ\n{resultName} ({unit:label})"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "customWidth": "33",
            "name": "text - 16"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"applications\"></a>Â∫îÁî®Á®ãÂ∫è\n{resultName} ({unit:label})\n"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "customWidth": "33",
            "name": "text - 6"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName, RiskLevelDuringSignIn\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n{unit} summarize count() by UserDisplayName, RiskLevelDuringSignIn\r\n| summarize count() by RiskLevelDuringSignIn\r\n",
                "size": 1,
                "showAnalytics": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                        "columnMatch": "deviceState",
                        "formatter": 1
                    },
                    "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                            "palette": "auto"
                        },
                        "numberFormat": {
                            "unit": 17,
                            "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                            }
                        }
                    }
                }
            },
            "customWidth": "33",
            "name": "success users device state - Copy - Copy - Copy"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName, location = tostring(LocationDetails.city)\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber, location\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n{unit} summarize count() by UserDisplayName, location\r\n| summarize Count = count() by location\r\n| sort by Count desc",
                "size": 1,
                "showAnalytics": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "location",
                            "formatter": 8,
                            "formatOptions": {
                                "palette": "green",
                                "showIcon": true,
                                "aggregation": "Count"
                            }
                        },
                        {
                            "columnMatch": "Count",
                            "formatter": 8,
                            "formatOptions": {
                                "palette": "blue",
                                "showIcon": true,
                                "aggregation": "Max"
                            }
                        },
                        {
                            "columnMatch": "-- Group By --",
                            "formatter": 8,
                            "formatOptions": {
                                "palette": "green",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TimeGenerated",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "UserDisplayName",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "AppDisplayName",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "rowNumber",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "combinedResult",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "ConditionalAccessPolicies",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "rowNumber1",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ]
                }
            },
            "customWidth": "33",
            "name": "success users location"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n{unit} summarize count() by UserDisplayName, AppDisplayName\r\n| summarize Count = count() by AppDisplayName\r\n| sort by Count desc",
                "size": 1,
                "showAnalytics": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "location",
                            "formatter": 8,
                            "formatOptions": {
                                "palette": "green",
                                "showIcon": true,
                                "aggregation": "Count"
                            }
                        },
                        {
                            "columnMatch": "Count",
                            "formatter": 8,
                            "formatOptions": {
                                "palette": "blue",
                                "showIcon": true,
                                "aggregation": "Max"
                            }
                        },
                        {
                            "columnMatch": "-- Group By --",
                            "formatter": 8,
                            "formatOptions": {
                                "palette": "green",
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TimeGenerated",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "UserDisplayName",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "AppDisplayName",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "rowNumber",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "combinedResult",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "ConditionalAccessPolicies",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "rowNumber1",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ]
                }
            },
            "customWidth": "33",
            "name": "success users location - Copy"
        },
        {
            "type": 1,
            "content": {
                "json": "____________________________________________\n## <a name=\"sign-in-details\"></a>ÁôªÂΩïËØ¶ÁªÜ‰ø°ÊÅØ\nüí° Ëã•Ë¶ÅË∞ÉÊü•ÁâπÂÆöÁî®Êà∑ÁöÑÁôªÂΩïËØ¶ÁªÜ‰ø°ÊÅØÔºåËØ∑ÊåâÂ∑•‰ΩúÁ∞øÈ°∂ÈÉ®ÁöÑÁî®Êà∑ÂêçËøõË°åÁ≠õÈÄâ"
            },
            "conditionalVisibility": {
                "parameterName": "statusCode",
                "comparison": "isNotEqualTo",
                "value": "0"
            },
            "name": "text - 22"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName, CorrelationId, Status\r\n| where ConditionalAccessPolicies != \"[]\"\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend failureReason = tostring(Status[\"failureReason\"]), displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber, TimeGenerated, UserDisplayName, AppDisplayName, CorrelationId, failureReason\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n| project TimeGenerated, UserDisplayName, AppDisplayName, Signins = combinedResult, CorrelationId, failureReason\r\n| summarize Signins = count() by UserDisplayName\r\n| sort by Signins desc",
                "size": 0,
                "exportFieldName": "UserDisplayName",
                "exportParameterName": "user",
                "exportDefaultValue": "*",
                "showAnalytics": true,
                "title": "User sign-in count",
                "timeContext": {
                    "durationMs": 0
                },
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "UserDisplayName",
                            "formatter": 0,
                            "formatOptions": {
                                "linkTarget": "CellDetails",
                                "linkIsContextBlade": true,
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "Signins",
                            "formatter": 8,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "rowLimit": 10000,
                    "filter": true
                }
            },
            "customWidth": "30",
            "name": "query - 21"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "SigninLogs\r\n| where TimeGenerated {TimeRange:value}\r\n| project ConditionalAccessPolicies, TimeGenerated, UserDisplayName, AppDisplayName, CorrelationId, Status\r\n| where ConditionalAccessPolicies != \"[]\"\r\n//| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where '{user}' == '*' or '{user}' == UserDisplayName\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| order by TimeGenerated desc \r\n| extend rowNumber = row_number()\r\n| as hint.materialized = true originalData\r\n| mv-expand CApolicy = ConditionalAccessPolicies\r\n| extend failureReason = tostring(Status[\"failureReason\"]), displayName = tostring(CApolicy[\"displayName\"]), result = tostring(CApolicy[\"result\"])\r\n| where displayName in ({Policy})\r\n| summarize failureCount = countif(result == \"failure\" or result == \"reportOnlyFailure\"), successCount = countif(result == \"success\" or result == \"reportOnlySuccess\"), interruptCount = countif(result == \"interrupt\" or result == \"reportOnlyInterrupted\") by rowNumber, TimeGenerated, UserDisplayName, AppDisplayName, CorrelationId, failureReason\r\n| extend combinedResult = case(failureCount > 0, \"failure\", interruptCount > 0, \"interrupt\", successCount > 0, \"success\", \"notApplied\")\r\n| join kind = leftouter (\r\n    originalData\r\n) on rowNumber\r\n| extend filterResult = case(\"{resultName}\" == \"Total\",\"successfailureinterruptreportOnlySuccessreportOnlyFailurereportOnlyInterruptedreportOnlyNotApplied\", \"{resultName}\" == \"Success\", \"success\", \"{resultName}\" == \"Failure\", \"failure\", \"{resultName}\" == \"User action required\", \"interrupt\",\"notApplied\")\r\n| where filterResult contains combinedResult\r\n| project TimeGenerated, UserDisplayName, AppDisplayName, Result = combinedResult, failureReason, CorrelationId\r\n// summarize Result = count() by UserDisplayName\r\n// sort by Result desc\r\n",
                "size": 0,
                "showAnalytics": true,
                "title": "Sign-in events",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "UserDisplayName",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "count_",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "TimeGenerated",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "AppDisplayName",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "Signins",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true,
                                "aggregation": "Count"
                            }
                        },
                        {
                            "columnMatch": "CorrelationId",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        },
                        {
                            "columnMatch": "combinedResult",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true,
                                "aggregation": "Count"
                            }
                        },
                        {
                            "columnMatch": "-- Group By --",
                            "formatter": 0,
                            "formatOptions": {
                                "showIcon": true
                            }
                        }
                    ],
                    "rowLimit": 1000,
                    "filter": true
                }
            },
            "customWidth": "70",
            "name": "query - 22"
        }
    ],
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}